Задача состоит в том, чтобы написать клиентскую программу, которая отправляет http get запрос на сервер с двумя параметрами a && b, получает json ответ и выводит определенные данные.

data = resp.json() - преобразует json ответ находящийся в reqp.text, а resp.json() автоматически парсит этот текст в словарь.

result = data["result"] - извлекает список, связанный с ключем rewult из data.

Почему это работает: 
http get - запрос: программа отправляет запрос, который используется для получения данных с сервера. GET запросы являются индепотентными, азначит на одинкаовую точку входа дают одинаковый ответ. 
json-ответ: сервер возвращает данные в формате json, который является стандартным для общения клиента и сервера.
Обработка данных: программа извлекает и работает с данными из json файла.

Эта программа является клиентом, который взаимодействует с http сервером, используя библиотеку requests. Она получает от пользователя адрес сервера, порт и два числа. Отправляет get запрос и возвращает json ответ. Список из ответа сортируется.

Так же можно прописать обработку ошибок, для дальнейшего расширения программы:

#######################################################
import requests

def solve:
  server = input()
  port = int(input())
  a = int(input())
  b = int(input())

  try:
    resp = requests.get(f"{server}:{port}", params = {"a": a, "b": b})
    resp.raise_for_status()

    data = resp.json()
    result = data["result"]
    result.sort()
    print(*result)
    print(data["check"])
  except requests.exceptions.RequestException as e:
    print(f"Error by request: {e}")
  except KeyError as e:
    print(f"Error in json-file: {e}")

solve()
#######################################################

Если сервер вернет не валидный json в этом случае resp.json() вызовет обработку ошибки исключения.

для отправления пост запроса: 
resp = requests.post(f"{server}:{port}", json={"a":a, "b":b})
