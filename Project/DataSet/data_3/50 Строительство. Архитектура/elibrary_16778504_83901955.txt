Расчет строительных конструкций 

ПОИСК РАЦИОНАЛЬНЫХ ПАРАМЕТРОВ СТЕРЖНЕВЫХ 
МЕТАЛЛОКОНСТРУКЦИЙ НА ОСНОВЕ АДАПТИВНОЙ 

ЭВОЛЮЦИОННОЙ МОДЕЛИ 
А.В. АЛЕКСЕЙЦЕВ, канд. техн. наук, доцент, 
Н.С. КУРЧЕНКО, аспирант 
Брянская государственная инженерно-технологическая академия 
241037, г. Брянск, ул. Брянского фронта, д.12, кв. 29. E-mail: aalexw@mail.ru  

Разработана итерационная схема оптимизации стержневых металлических кон-
струкций при использовании генетического алгоритма с альтернативными способами 
формирования популяций и адаптивными операторами мутации, кроссинговера и ин-
версии. Такой алгоритм позволяет при решении больших задач избегать возникновения 
«пустых» популяций, имеет относительно невысокую трудоемкость и дает возмож-
ность получать новые рациональные решения. Рассмотрены стандартные примеры 
оптимизации стержневых несущих систем. 
Ключевые слова: параметрическая оптимизация, генетический алгоритм, адаптивные 
операторы, мутация, кроссинговер, инверсия  
    

Проблеме оптимизации стержневых конструкций с применением генетиче-
ских алгоритмов в отечественной и зарубежной литературе уделяется все боль-
шее внимание [1-5]. Однако применение таких алгоритмов для решения экстре-
мальных задач с большим числом варьируемых параметров часто приводит к 
попаданию в локальные оптимумы или сопровождается низкой сходимостью 
алгоритма. Нередко в процессе поиска появляются «пустые» популяции, в ко-
торых отсутствуют особи, удовлетворяющие поставленным ограничениям. 
Многие авторы [4, 5] используют для решения данных проблем штрафные 
функции, которые допускают включение неработоспособных особей в популя-
ции с учетом накладываемых на эти особи штрафов по критерию оптимизации. 
Однако такой подход требует анализа штрафных функций, которые могут под-
бираться индивидуально для каждого типа решаемых задач.  

В статье предлагается вариант эволюционной модели, позволяющей в зна-
чительной степени решить проблему «пустых» популяций и низкой сходимости 
алгоритма путем введения в итерационный процесс адаптивных генетических 
операторов и альтернативных способов формирования популяций в процессе 
оптимизации. 

Постановка задачи. Для линейно-деформируемой геометрически  неизме-
няемой стержневой системы целью оптимизации будем считать минимум объе-
ма материала, идущего на ее изготовление: 

n  
 Aili  min , (1) 
i1

где Ai  – площадь поперечного сечения профиля в i-м стержне; li – длина стерж-
ня; n – число стержней в конструкции. Оценку  напряженного и деформирован-
ного состояния выполняем с использованием метода конечных элементов. Учи-
тываем следующие ограничения: 

1) условие равновесия стержневой конструкции, дискретизированной со-
гласно методу конечных элементов: 

[K ] j0  R j0 , j0 1...m0 ,  
7 

 



где [K]  – матрица жесткости конечно-элементной модели несущей системы; 
 j0 , R j0 – векторы  перемещений  и узловых сил j0 -го нагружения; m0 – число 
вариантов нагружений; 

2) условие прочности и устойчивости стержней в соответствии со СНиП II-
3-81* «Стальные конструкции»; 

3) конструктивные и технологические ограничения, учитывающие величи-
ны габаритных размеров конструкции, предельную гибкость стержней, возмож-
ность применения тех или иных сортаментов и т.п.; 

4) общая устойчивость конструкции. 
Генетическая  итерационная процедура. Алгоритм строится путем мо-

дификации итерационной схемы, разработанной в статье [3]. Общая схема мо-
дифицированной итерационной процедуры показана на рисунке 1. Поясним со-
держание приведенных на схеме блоков № 2 и № 5. Процедуры, описанные в 
остальных блоках, подробно рассматриваются в работе [6], а в рамках данного 
алгоритма не модифицируются.  

 
Рис. 1. Блок-схема алгоритма оптимизации 

Формирование начальной популяции. Каждый вариант конструкции 
представим в виде особи, набор генов которой определяет ее варьируемые па-
раметры. Значения параметров, допускаемых для выбора в процессе оптимиза-
ции, подбираются с учетом предварительного расчета конструкции. Особь X 
запишем в следующем виде: 

8 
 



  Х : a1,1 ,  а1,2 , ..., аi, j , ..., an,Ng , i[1,2...n] , j[1,2...Ng
i i ] ,  

где ai,j – идентификатор, связанный со значением параметра (ген); n – число 
варьируемых параметров; i – номер параметра; j – номер значения параметра.  
Каждый варьируемый параметр представляем в виде Ngi  кортежей, отсортиро-
ванных по возрастанию:   

  Pi  {(ai,1,A1),  (аi,2 ,A2 ), ..., (аi, j ,A j ), ..., (ai,Ng ,A g )} ,  
i N i  

где A1 - ANgi  – значения варьируемых параметров; Ngi  – число допустимых 
значений i -го параметра.  

Первоначально задаем число q особей в популяции, формируемых случай-
ным образом, и генерируем эти особи. Для остальных особей используется про-
цедура, предусматривающая задание всех генов в пределах отдельной особи 
одинаковыми. Эти гены назначаются в порядке их убывания, начиная с номера, 
имеющего максимальное значение параметра. Популяцию, состоящую из Np 
особей,  представим в виде выражения: 

X1 :  a1,j , а2,j ,..., an,j  
…… ……………… 
X q :  a1,j , а2,j ,...,an,j  
X                             ( 2) 

q1 :  a1,Ng , а
i 2,Ng ,...,a

i n,Ng  
i

…… ………………………………. 
X N :  a

p 1,Ng k , а2,Ng k ,...,a  
i i n,Ngik

В выражении (2) индекс k  N p  q , индекс j  для каждого параметра слу-
чайным образом выбирается на интервале [1; Ngi ] . Расчеты показывают, что 
при условии Ngi  k  целесообразно принимать параметр q  0,3N p . Проиллю-
стрируем использование выражения (2). Пусть поколение состоит из 7 особей, 
каждая из которых содержит 8 варьируемых параметров, каждый параметр мо-
жет  п ринимать 10 различных значений, а величина q  2 . Формула примет вид: 

 

X1 :  2, 3, 7, 1, 6, 9, 10, 1 
X2 :  4, 4, 5, 2, 8, 7, 9, 2 
X3 :  10,  10,  10,  10,  10,  10,  10,  10  
X4 :  9,       9, 9, 9, 9, 9, 9, 9  
X5 :  8,  8,  8,  8,  8,  8,  8,  8  
X6 :  7, 7, 7, 7, 7, 7, 7, 7  
X7 :  6, 6, 6, 6, 6, 6, 6, 6 

При такой схеме формирования начальной популяции в поколении будет при-
сутствовать, по крайней мере, один вариант конструкции, удовлетворяющий 
поставленным ограничениям. Например, это особь X3 , для которой каждый из 
варьируемых параметров имеет максимальное значение, идентифицируемое 
номером 10. Описанный способ формирования начальной популяции в боль-
шинстве случаев решает проблему «пустых» популяций. 

Формирование следующей популяции. Разобьем популяцию, состоящую 
из Np  особей на две части. Первая часть будет содержать К1 особей, вторая – К2 
особей. Соотношение величин К1 и К2 зависит от чувствительности целевой 

9 
 



функции (1) к изменениям варьируемых параметров. Оптимизационные расче-
ты конкретных стержневых систем показывают, что для получения экономич-
ной итерационной процедуры целесообразно при N p  20  принимать отноше-
ние K1/Np  = 0,6..0,8.  

Для формирования особей первой части популяции в итерационном про-
цессе применяются адаптивные генетические операторы. При этом в после-
дующее поколение помещаются работоспособные особи предыдущего поколе-
ния с наилучшим критерием выживаемости, модифицированные этими опера-
торами. Под критерием выживаемости понимается минимальное значение объ-
ема конструкции, вычисляемое по формуле (1). Неработоспособные особи за-
меняются вариантами из базы данных лучших вариантов объектов [6]. Вторая 
часть популяции формируется на основе этой базы. Из базы методом рулетки 
[6] выбираются К2 особей и копируются в текущую популяцию. Затем для каж-
дой скопированной особи выполняется ряд преобразований: 

1)  случайным образом на интервале [1; k~  n ] выбирается число ρ генов, 
подвергающихся изменениям. Здесь k~  – задаваемое число, зависящее от n . 
Установлено, что при оптимизации конструкций с числом варьируемых пара-
метров n5; 20  целесообразно принимать k~0,1; 0,4 . Значение ρ округляет-
ся до целого; 

2) случайно определяются локусы (номера) генов, в которых будут проис-
ходить изменения; 

3) определяется интервал изменения [m; m]  для выбранных величин ai, j . 
Величина m  – задаваемое целое число, m[1; n 1] ; 

4) для выбранных генов выполняются изменения параметров в соответст-
вии с зависимостью:  

 ai , j  1, 1[0;m], если j  m;
                   а*  i , j  ai , j  2 , 2 [-m;m], если  m  j  (n m);  (3) 


 ai , j  3 , 3 [0;m], если j  (n m).

Здесь a*
i, j  – идентификатор (ген) i-го параметра, которому соответствует j-е 

значение после изменения; χ1 – χ3 – случайно выбираемые из своих интервалов 
целые числа. Приведем пример использования зависимости (3). Рассмотрим 
особь X1, состоящую из 10 генов, каждый параметр может принимать 8 значе-
ний, нумеруемых от 1 до 8: 

X1 :  8, 2, 4, 4, 5, 6, 1, 2, 2, 3 
Принимаем k~ =0,4. Случайным образом на интервале [1;3] выбираем число 

ρ генов, подверженных изменениям. Пусть выбрано значение ρ=3. Полагаем, 
что для рассматриваемой особи случайно выбраны первый, третий и восьмой  
гены, в которых будут происходить изменения, и задана величина m = 2. Тогда 
особь может принять несколько возможных вариантов (приведем, например, 
пять из них):   

X~1 :  7, 2, 2, 4, 5, 6, 1, 1, 2, 3 
X~1 :  6, 2, 3, 4, 5, 6, 1, 3, 2, 3 
X~1 :  7, 2, 4, 4, 5, 6, 1, 2, 2, 3 
X~1 :  8, 2, 6, 4, 5, 6, 1, 1, 2, 3 
X~1 :  6, 2, 5, 4, 5, 6, 1, 2, 2, 3 

10 
 



Из всех возможных вариантов сгенерированных таким способом особей в 
популяцию включаются те, для которых выполняется условие: 

  xV1 V2 V1 ,  (4) 
где V1– объем особи, выбранной методом рулетки из базы данных лучших ва-
риантов объектов; V2  – объем модифицированной особи X~ , x – коэффициент, 
принимаемый  равным 0,7-0,9. Для поиска особей, удовлетворяющих неравен-
ству (4), организуется цикл с предусловием вида V2 V1 f N . Значение функ-
ции f N  зависит от номера текущего поколения N : f ( N ) 1 2 / N . 

Адаптивные генетические операторы. Рассмотрим построение оператора 
регулируемой мутации. Известный оператор одноточечной мутации [6] моди-
фицируется следующим образом.  

1) Вычисляется параметр t , определяющий число генов, в которых будут 
изменены значения параметров: 

  t  (   lg( N ) ,  (5) 
где   – задаваемый коэффициент, зависящий от n . Рекомендуется принимать 
  2...5  при n[6..30] . Величина t  округляется до целого числа. 

2) Случайным образом для особи выбираются гены, которые будут изме-
няться. 

3) Реализуется случайное изменение генов и связанных с ними соответст-
вующих значений параметров. 

Проиллюстрируем использование оператора на родительской особи X1 , 
состоящей из 8 генов, каждый ген которой может принимать значение от 1 до 5. 
Зададим   3. С учетом выражения (5) получим: 

  X1 :  4, 4, 5, 5, 1, 2, 2, 3 
N =10 t =2 X~1 :  5, 1, 5, 5, 1, 2, 2, 3 
N =100 t =1 X~1 :  4, 4, 5, 3, 1, 2, 2, 3 
N =1000 t =0 X~1 :  4, 4, 5, 5, 1, 2, 2, 3 

Приведенный пример показывает, что в ходе итерационного процесса количе-
ство генов, подвергающихся мутации, изменяется вплоть до отключения мута-
ции. Такая схема использования оператора мутации позволяет на первых итера-
циях расширять область поиска рациональных решений, а на последующих – 
сужать эту область.  

Регулируемая инверсия. Оператор целесообразно использовать для особей 
при n 10. Выполняются следующие этапы. 

1) Выбор случайным образом p точек инверсии, делящих особь на части. 
2) Инверсия генов в пределах случайно выбираемых таких частей. Параметр p 
вычисляется по формуле  p 1 lg( N )k0 , где k0  – задаваемый коэффициент. 
Приведем пример выполнения инверсии генов особи X1 :  на 10-м, 100-м и 
1000-м поколении, задавая k0 =1.  

  X1 :  a, b, c, d, e, f, g, h 
N =10 p =2 X~1 :  a, d, c, b, h, g, f, e 
N =100 p =3 X~1 :  b, a, c, d, e, g, f, h 
N =1000 p =4 X~1 :  b, a, d, c, f, e, h,  g 

11 
 

(
)

(
)



Здесь при p = 2 и p = 3 случайно выбрано по две части особи, подвергаемые ин-
версии, при p =4 – четыре части. Эти части затушеваны серым цветом. Точки 
инверсии показаны вертикальными линиями. Идентификаторы а-h введены для 
упрощения записи результата.  

Регулируемый кроссинговер. Этот оператор является модификацией извест-
ного оператора одноточечного кроссинговера [6]. В ходе итерационного про-
цесса изменяется число точек кроссинговера на основе формулы (5). При n 10 
рекомендуется принимать   3...6.  

Проиллюстрируем работу оператора при t =2 и t =1 (рис. 2). 

 
Рис. 2. Работа оператора кроссинговера 

При t = 0 обмена параметрами не происходит. Отключение оператора может 
выполняться, когда в ходе оптимизации получено решение, близкое к глобаль-
ному экстремуму. На рисунке 2 цифрами у штриховых линий показаны номера 
точек кроссинговера и справа результат обмена параметрами. 
Примеры оптимизации стержневых конструкций. Рассмотрим оптимизацию 
стандартной 10-стержневой консольной фермы (рисунок 3). Этот пример ис-
пользуется многими авторами [4, 5, 7] для оценки работоспособности алгорит-

мов оптимизации и скорости их 
сходимости. Для удобного срав-
нения результатов в качестве 
критерия рациональности конст-
рукции принимаем минимум мас-
сы стержней. Использовались 
следующие исходные данные: 
плотность материала стержней 
2,76799 г/см3, модуль упругости  
материала Е = 68947,57 МПа, P = 
= 444,8222 кН, L = 9,144 м. Учи-
тывались ограничения: допускае-

мые напряжения в стержнях не должны превышать по модулю 172,368 МПа, 
максимальные перемещения   каждого из узлов  по вертикали и по горизонта-
ли не должны превышать 5,08 см. Условие устойчивости стержней не учитыва-
ется. Независимо варьировались  площади  поперечных  сечений  каждого из 
стержней. Для каждого варьируемого параметра использовался набор дискрет-
ных значений площадей (см2) из работы [5]: А={10,451592; 11,61288; 12,838684; 
13,741908; 15,354808; 16,903192; 16,967708; 18,580608; 18,903188; 19,935444; 
20,193508; 21,806408; 22,387052; 22,90318; 23,419308; 24,774144; 25,032208; 
26,967688; 27,225752; 28,967684; 29,612844; 30,96768; 32,064452; 33,032192; 
37,032184; 46,580552; 51,419252; 74,1934; 87,0966; 89,67724; 91,61272; 99,9998; 
12 
 



103,2256; 109,03204; 121,29008; 128,38684; 141,9352; 147,74164; 170,9674; 
193,548; 216,1286}. В процессе оптимизации на каждой итерации учитывалось 
по 20 особей.  

Масса найденной рациональной конструкции составила 2490,55 кг, при 
этом в среднем потребовалось выполнить менее 4600 расчетов конструкции и 
пройти 230 итераций поиска. Сопоставление результатов оптимизации пред-

Таблица 1. Сравнение ставлены в табл. 1. Полный перебор вари-
результатов оптимизации  антов связан с проведением 1,34 1016  рас-
Номер Площади стержней четов конструкции. При оптимизации 
площади Работа  Данная  этой фермы с использованием простого 

[5] статья генетического алгоритма потребовалось 
A1 216,1286 216,1286 сделать около 60000 расчетов, проходя 
A2 10,45159 10,45159 менее 3000 итераций.   
A3 147,7416 147,7416 Рассмотрим другой пример. На ри-
A4 99,9998 91,61272 сунке 5 показана двухопорная 15-
A5 10,45159 10,45159 стержневая ферма. Исходные данные взя-
A6 10,45159 10,45159 ты из работ [4, 7]. Модуль упругости ма-
A7 46,58055 51,41925 териала стержней Е = 206,84 МПа, наи-
A8 147,7416 147,7416 большие напряжения по модулю не долж-
A9 141,9352 141,9352 ны превышать 344,74 МПа. Задавалось: 
A10 10,45159 10,45159 L= 101,6 см; Н = 76,2 см; P = 88,964 кН. 

M, кг 2494,46 2490,55 Набор дискретных значений варьируемых 
 , см    5,0546 5,0769 параметров берем из работы [4] в виде 

множества площадей поперечных сечений 
стержней (см2): A={0,64516; 1,29032; 1,93548; 2,58064; 3,2258; 3,87096; 4,51612; 
5,16128; 5,80644; 6,4516; 7,09676; 7,74192; 8,38708; 9,03224; 9,6774; 10,32256}, 
нумеруемых от 1 до 12.  

 
Рис. 5. Конечно-элементная модель фермы 

В соответствии с условиями задачи, описанными в работе [4], ограничений 
по перемещениям узлов фермы не вводится и не используется условий симмет-
рии. В процессе оптимизации на каждой итерации учитывалось по 24 особи. В 
результате параметрического синтеза была получена симметричная ферма с 
наименьшим объемом 4161,27 см3, показанная на рис. 6.  

Процесс поиска решения длился в среднем около 760 поколений, при этом 
было выполнено 18240 расчетов. Простой генетический алгоритм позволил по-
лучить такое же решение в среднем за 4500 итераций, при этом потребовалось 
выполнить около 108 000 расчетов. Полный перебор вариантов связан с прове-
дением 1,54·1016 расчетов конструкции. 

13 
 



 
Рис. 6. Результат параметрического синтеза: 

1-11 – номера выбранных из множества А рациональных площадей  
Вывод. Разработана итерационная схема параметрической оптимизации 

стальных стержневых систем на основе эволюционного моделирования с введе-
нием адаптивных генетических операторов и альтернативных способов форми-
рования популяций. Реализованы операторы кроссинговера, мутации, инверсии, 
изменяющие в ходе итерационного процесса свои управляющие параметры. Та-
кой алгоритм позволяет существенно уменьшить трудоемкость оптимизации 
больших задач и получать новые рациональные решения. Приведенные стан-
дартные примеры показывают работоспособность и достаточно высокую эф-
фективность предлагаемого подхода к оптимизации. 

Л и т е р а т у р а 
1. Юрьев, А.Г. Генетические алгоритмы оптимизации строительных конструкций 

[Текст] / А.Г. Юрьев, С.В. Клюев // Образование, наука, производство и управление в 
XXI веке: Матер. Междунар. науч. конф. В 4 т. – Старый Оскол: Изд-во СТИ МИСиС, 
2004. – Т. 4. – С. 238-240. 

2. Ольков, Я.И. Автоматизированное оптимальное проектирование пространствен-
ных металлических стержневых конструкций с использованием алгоритмов структур-
ной оптимизации [Текст] / Я.И. Ольков, А.В. Андроников // Известия вузов. Строитель-
ство, 2003. – №12. – С. 8-13. 

3. Серпик, И.Н. Структурно-параметрическая оптимизация стержневых металличе-
ских конструкций на основе эволюционного моделирования [Текст] / И.Н. Серпик, 
А.В. Алексейцев, Ф.Н. Левкович, А.И. Тютюнников // Известия вузов. Строительство. – 
2005. – №8. – С. 16-24. 

4. Balling, R. Multiple optimum size/shape/topology designs for skeletal structures using 
a genetic algorithm [Text] / R. Balling, R. Briggs, K. Gillman // Journal of Structural Engi-
neering. ASCE. – 2006. – Vol. 132. – P. 1158 -1165.  

5. Nanakorn, P. An adaptive penalty function in genetic algorithms for structural design 
optimization [Text] / P. Nanakorn, K. Meesomklin // Computers and Structures. – 2001. – 
Vol. 79.– Р 2527–2539. 

6. Серпик,  И.Н. Генетические алгоритмы оптимизации металлических строитель-
ных конструкций: Монография [Текст] / И.Н. Серпик,  А.В. Алексейцев, А.А. Лелетко // 
Под общ. ред. Серпика И.Н. – Брянск: Изд-во БГИТА, 2010. – 187 с. 

7. Su, R. Truss topology optimization using genetic algorithm with individual identifica-
tion technique [Text] / R. Su, L. Gui, Z. Fan // Proceedings of the World Congress on Engi-
neering. July 1 – 3, London, U.K. – 2009. – Vol. 2. – Р. 45-56. 

SEARCHING THE RATIONAL PARAMETERS OF BAR STEEL STRUCTURES 
BASED ON ADAPTIVE EVOLUTIONARY MODEL 

A.V. ALEKSEYTSEV, N.S. KURCHENKO 
An iterative optimization scheme of metal beam structures is developed with using a ge-

netic algorithm with alternative ways of forming populations and adaptive mutation operator, 
crossover and inversion. This algorithm allows solving large problems to avoid occurrence of 
"empty" populations, has a relatively low complexity and provides opportunity to obtain new 
rational decisions. The authors consider the standard examples of optimization of beam carry-
ing systems. 
KEY WORDS: parametric optimization, genetic algorithm, adaptive operators, mutation, 
crossover, inversion 
14