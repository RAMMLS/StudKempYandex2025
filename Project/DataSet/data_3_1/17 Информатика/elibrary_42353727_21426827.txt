АНАЛИЗ ДАННЫХ И ИНТЕЛЛЕКТУАЛЬНЫЕ СИСТЕМЫ

DOI: 10.17323/1998-0663.2019.4.60.72

Проектирование структуры  
программной системы обработки  
корпусов текстовых документов

В.Б. Барахнин a,b  
E-mail: bar@ict.nsc.ru

О.Ю. Кожемякина a   
E-mail: olgakozhemyakina@mail.ru

Р.И. Мухамедиев c,d,e  
E-mail: ravil.muhamedyev@gmail.com

Ю.С. Борзилова a   
E-mail: i.borzilova@alumni.nsu.ru

К.О. Якунин c,d  
E-mail: yakunin.k@mail.ru
a Институт вычислительных технологий, Сибирское отделение Российской академии наук

Адрес: 630090, г. Новосибирск, пр-т Академика Лаврентьева, д. 6
b Новосибирский национальный исследовательский государственный университет

Адрес: 630090, г. Новосибирск, ул. Пирогова, д. 1 
c Satbayev University 

Адрес: Казахстан, 050013, г. Алматы, ул. Сатпаева, д. 22a
d Институт информационных и вычислительных технологий 

Адрес: Казахстан, 050010, г. Алматы, ул. Пушкина, д. 125
e Университет ISMA

Адрес: Латвия, LV-1019, г. Рига, ул. Ломоносова, 1

Аннотация
Одной из труднорешаемых задач в области интеллектуального анализа данных является 

разработка универсального инструментария для анализа текстов художественного и делового 
стиля. Популярным направлением развития алгоритмов обработки корпусов текстовых документов 
является использование методов машинного обучения, которые позволяют решать задачи 
обработки естественных языков. Основанием для проведения исследований в этой области 
являются такие факторы, как специфика структуры текстов художественного и делового стиля (что 
требует формирования отдельных наборов данных и, в случае использования методов машинного 
обучения, – дополнительных параметров при обучении), а также отсутствие укомплектованных 
систем массовой обработки корпусов текстовых документов для русского языка (в отношении 
научного сообщества в коммерческой среде существуют системы меньших масштабов, решающие 
узкоспециализированные задачи, например, определение тональности текста). Целью текущего 
исследования является проектирование и последующая разработка структуры системы обработки 
корпусов текстовых документов. При проектировании учитывались требования, предъявляемые 
к широкомасштабным системам: модульность, возможность масштабирования компонентов и их 
условная независимость. Проектируемая система представляет собой совокупность компонентов, 
каждый из которых сформирован и используется в виде Docker-контейнеров. Уровни системы: 

БИЗНЕС-ИНФОРМАТИКА   Т. 13  № 4 – 2019 
60



АНАЛИЗ ДАННЫХ И ИНТЕЛЛЕКТУАЛЬНЫЕ СИСТЕМЫ

обработка данных, хранение данных, визуализация и управление результатами обработки данных. 
На уровне обработки данных выполняется сбор (скраппинг) текстовых документов (например, 
новостных событий) и их дальнейшая обработка с помощью ансамбля методов машинного 
обучения, каждый из которых реализован в системе как отдельная Airflow-задача. Полученные 
результаты помещаются для хранения в реляционную базу данных, а для увеличения быстродействия 
поиска по данным (более 1 млн. единиц) используется инструмент ElasticSearch. Визуализация 
статистики, полученной в результате работы алгоритмов, осуществляется с использованием плагина 
Plotly. Администрирование и просмотр обработанных текстов доступны через веб-интерфейс с 
использованием фреймворка Django. Общая схема взаимодействия компонентов организована 
по принципу ETL (extract, transform, load). В настоящее время система используется для анализа 
корпусов новостных текстов с целью сравнительного анализа параметров текстов и средств массовой 
информации в целом. В перспективе планируется усовершенствование системы и опубликование 
компонентов в открытом репозитории GitHub для доступа научного сообщества.

Графическая аннотация

Ключевые слова: обработка естественных языков; потоковая обработка текстов; информационная система анализа 
текстов; разработка системы обработки корпусов текстов.

Цитирование: Барахнин В.Б., Кожемякина О.Ю., Мухамедиев Р.И., Борзилова Ю.С., Якунин К.О. Проектирование 
структуры программной системы обработки корпусов текстовых документов // Бизнес-информатика. 2019. Т. 13. 
№ 4. С. 60–72. DOI: 10.17323/1998-0663.2019.4.60.72.

Введение хранения извлеченных характеристик (наряду с 
самими документами) в справочно-информаци-

овременные методы интеллектуального ана-

С онном фонде создаваемой программной системы. 
лиза данных позволяют обрабатывать боль-

При этом информационная модель хранилища 
шие корпуса текстовых документов (объ-

документов и их характеристик будет в значитель-
емом более 1 млн документов) с целью выявления 

ной мере зависеть от типа исследуемых корпусов 
как тех или иных свойств отдельных документов, 

текстов и характера решаемых задач. Например, 
входящих в корпус, так и закономерностей, харак-
теризующих их совокупность. Поскольку указан- системы обработки новостных сообщений с целью 

ные алгоритмы предполагают извлечение из текстов выявления деструктивной информации [1] суще-

широкого спектра разноплановых характеристик ственно отличаются от систем обработки научной 

(что нередко само по себе является комплексной информации [2] и, тем более, художественных тек-

задачей, решение которой подразумевает исполь- стов, как прозаических, так и поэтических [3]. 

зование сложных и отнюдь не всегда быстродей- Следует отметить, что одной из труднорешаемых 
ствующих алгоритмов), возникает необходимость задач является разработка универсального инстру-

БИЗНЕС-ИНФОРМАТИКА   Т. 13  № 4 – 2019   
61



АНАЛИЗ ДАННЫХ И ИНТЕЛЛЕКТУАЛЬНЫЕ СИСТЕМЫ

ментария для анализа текстов художественного и ную экспертами в предметной области или dataset-
делового стиля. Как указано в [4], «при распознава- инженерами. Затем размеченный корпус текстов 
нии слов делового текста наиболее существенным используется для обучения различных классифи-
является фактор знакомства с текстом (его темой, каторов, среди которых часто применяются Naive 
структурой и наиболее частотными словами), клю- Bayes Classifier [13], Support Vector Classifier (SVM) 
чевые слова и элементы темы распознаются срав- [14], а также композиции алгоритмов, например, 
нительно неплохо, конец текста предсказуем и хо- бустинг [15], когда несколько методов машинного 
рошо распознается. Для художественного текста обучения могут объединяться в ансамбль (совокуп-
большая «опорность» приходится на начальный ность), в которой каждый следующий метод обу-
(преамбула) и срединный (развитие сюжета) ком- чается на ошибках предыдущего, и искусственные 
позиционные фрагменты и по-разному соотносит- нейронные сети (artificial neural networks, ANN) 
ся с компонентами коммуникативного и смысло- различных конфигураций [16, 17];
вого членения: с темой для преамбулы, с диалогом 4. Гибридный метод (hybrid method). Данный под-
(особенно ключевыми словами или ремой) для сре- ход может сочетать методы машинного обучения, а 
динного фрагмента. Таким образом, говоря о струк- также использовать шаблоны правил; 
турах текста и процедурах анализа, мы должны 

5. Метод, основанный на теоретико-графовых 
учитывать разнообразные виды контекста, в част-

моделях. При таком подходе используется разби-
ности, функциональный стиль, композиционную 

ение корпуса текстов на слова, при этом каждое 
структуру и риторическую связность текста» [4]. 

слово имеет свой вес. Такой вес используется, на-
В настоящее время обработка текстовой инфор- пример, в задачах анализа определения тонально-

мации является активно развивающейся отраслью сти текста: некоторые слова имеют больший вес и 
информационных технологий. Обзор работ в этой сильнее влияют на тональность текста; 
области имеется, например, в [5–8]. Отметим, что 

6. Предобученные модели на основе глубоких 
в последнее десятилетие основным направлением 

нейронных сетей (transfer learning), когда заранее 
развития алгоритмов обработки корпусов тексто-

обученная модель дообучается для решения спец-
вых документов является использование методов 

ифических задач, например, весьма популярная в 
машинного обучения (см., например, [9–11]). В об-

последнее время BERT [18].
щем же случае для автоматического анализа текста 
можно выделить следующие подходы [12]: В частности, задача анализа тональности текста 

неоднократно решалась и активно используется 
1. На основе правил с использованием шабло-

в коммерческих разработках. К последним мож-
нов (rule-based with patterns). Этот подход исполь-

но отнести, например, систему лингвистическо-
зует такие инструменты, как part-of-speech-taggers 

го анализа текстов модульного типа Eureka Engine, 
и parsers. Другой вариант – использование N-grams 

которая позволяет извлекать новые знания и фак-
для выделения часто используемых сочетаний, ко-

ты из неструктурированных данных больших объ-
торые объединяются в слова. В частности, при ре-

емов1. Кроме определения тональности документа, 
шении задач определения тональности текста этим 

система решает задачи определения тематики тек-
N-grams присваиваются положительные или отри-

ста (т.е. классификации), выделения именований и 
цательные оценки;  

имен собственных (named-entity recognition, NER). 
2. Машинное обучение без учителя (unsupervised Модуль автоматической классификации текстов 

learning). Главное отличие от машинного обучения TextClassifier реализован на основе машинного об-
с учителем – отсутствие ручной разметки для об- учения, также имеются модули автоматического 
учения модели. В случае статистической модели определения именованных сущностей, нормализа-
корпуса текстов наибольший вес в тексте имеют ции слов и морфоанализатор. Внутренняя структу-
такие термины, которые чаще встречаются в этом ра системы не приводится. Система использовалась 
тексте и одновременно встречаются в небольшом как инструмент для определения тональности текста 
количестве текстов всей выборки; в СМИ относительно одного и того же события [19]. 

3. Машинное обучение с учителем (supervised Кроме того, можно отметить работу [20], в которой 
learning). Обучающая выборка размечается вруч- приведены результаты исследования методики ана-

1   Eureka Engine: http://eurekaengine.ru/

БИЗНЕС-ИНФОРМАТИКА   Т. 13  № 4 – 2019 
62



АНАЛИЗ ДАННЫХ И ИНТЕЛЛЕКТУАЛЬНЫЕ СИСТЕМЫ

лиза тональности текста на примере анализа сообще-  структурный анализ (только для поэтических 
ний сети Твиттер и рецензий портала «Кинопоиск». текстов) – определение низкоуровневых характе-
В качестве инструментария авторы использовали ристик текста (фонетика и метроритмика стихотво-
алгоритмы машинного обучения: метод опорных рения);
векторов, наивный Байесовский классификатор,  семантический анализ – определение смысло-
методы случайных деревьев (random forest). Допол- вых конструкций с учетом синонимии и связыва-
нительно в работе приведен обзор аналогичных ра- ние именованных сущностей (named entity linking, 
бот в задачах анализа тональности текста. NEL). Анализ научных текстов обычно ограничи-

Разнообразие алгоритмов обработки текстов на вается этим уровнем;
естественном языке предполагает возможность  прагматический анализ – определение жан-
их реализации в виде отчуждаемого программно- рово-стилевых особенностей для художественных 
го продукта. В силу этого структура создаваемой текстов; конструкции, определяющие деструктив-
программной системы должна быть нацелена на ное влияние для новостных сообщений и т.д.
ее взаимодействие как с конечным пользователем,  синтез проведенных исследований – определе-
так и с другими системами. В данной статье фор- ние влияния низших уровней на более высокие, а 
мулируются требования к структуре создаваемой также агрегация результатов в удобном для воспри-
программной системы и определяются ролевые ятия и поиска виде.
функции пользователей. После этого описывается Сформулируем требования к функциональности 
разработанная структура, включающая в себя под- системы, исходя из ее целевого назначения: скра-
систему обработки данных, хранилище и подсисте- пинг, хранение, потоковая аналитика и формирова-
му построения аналитических отчетов. ние аналитических отчетов с визуализацией.

Основным особенностями разрабатываемой си- 1. Надежное хранение корпусов текстов больших 
стемы, выделяющими ее среди аналогов, являются: объемов, при этом система должна быть настроена 

1. Автоматическое тематическое моделирование, на работу с разностилевыми текстами: научными, 
которое позволяет определять тренды в реальном публицистическими, художественными; 
времени, без ручного формирования списка клю- 2. Быстрый параллельный доступ, фильтрация и 
чевых слов или запросов. Это позволяет в опера- агрегация данных с целью потоковой обработки: 
тивном режиме автоматически определять акту- предобработка, построение тематических моделей 
альные, социально значимые темы, что является и классификаторов, агрегация и выгрузка для отче-
критически важным при принятии управленческих тов в реальном времени и т.д.; 
решений в различных областях; 3. Гибкость и возможность хранения неструкту-

2. Экспертная разметка на уровне тематик по- рированных и слабоструктурированных данных 
зволяет на порядки уменьшить объем необходимых для поддержки возможности хранения и доступа к 
для разметки объектов (особенно по сравнению с произвольным структурам данных с целью прове-
использованием сетей глубокого обучения); дения статистического анализа и различных вычис-

3. Из предыдущего пункта следует возможность лительных экспериментов на основе современных 
оперативной и относительно недорогой разметки методов анализа текстов.
по произвольному набору критериев, не ограни- Структура программной системы должна позволять 
ченной только тональностью. Критерии могут быть решать масштабные задачи, состоящие в хранении 
выбраны индивидуально под конкретные требова- корпусов объемов нескольких миллионов текстов и 
ния клиента (например, оценка инновационности, пакетной обработки в режиме онлайн нескольких 
социальной значимости, оппозиционности, соци- тысяч документов. Таким, например, является про-
ального доверия, инфляционных ожиданий и т.д.). ект мониторинга в реальном времени русскоязычных 

СМИ Республики Казахстан [21], предназначенный 
1. Постановка задачи для создания отчетов следующих типов:

Процесс анализа текстов на естественном языке 1. Тематическая структура новостных публикаций 
сводится к следующим последовательным шагам, в казахстанских электронных СМИ – как на уров-
на которых осуществляется анализ характеристик не крупных тем (экономика, образование, поли-
текста: тика) и подтем (дошкольное образование, единый 

 инициализация – формирование корпуса тек- государственный экзамен, высшее образование и 
стов и его предобработка для последующего анализа; наука), так и на уровне информационных поводов 

БИЗНЕС-ИНФОРМАТИКА   Т. 13  № 4 – 2019   
63



АНАЛИЗ ДАННЫХ И ИНТЕЛЛЕКТУАЛЬНЫЕ СИСТЕМЫ

(конкретных узких тем, описывающих конкретное 2. Хранилища данных. Для обеспечения быстрого 
событие или группу близко связанных событий); взаимодействия с пользователем, а также снижения 

2. Оценка отдельных публикаций, тематик и СМИ потребления ресурсов используется несколько ви-
по произвольному набору критериев. Такая оценка дов хранилищ;
предполагает предварительную разметку экспертом 3. Подсистема построения аналитики по полу-
или коллегией экспертов; ченным данным.

3. Отчеты и оповещения по выявленным анома- Информационная система должна учитывать 
лиям. Аномалии рассматриваются на двух уровнях: этапы анализа текстов. Структура системы состо-
на уровне динамики (например, резкий рост пу- ит из компонентов, перечисленных при описании 
бликаций по определенной теме или резкий рост постановки задачи. На этапе предобработки вы-
публикаций с отрицательной оценкой по критерию полняется предварительная обработка текста для 
«тональность») и на тематическом уровне – появле- его дальнейшего анализа. Применяемые методы 
ние групп публикаций с нестандартной, «аномаль- предобработки зависят от алгоритма, который ра-
ной» тематикой, которая раннее не встречалась ботает с этими данными (обучение и анализ). Мож-
(например, тема криптовалют, тема феминизма в но выделить следующие виды обработки:
Казахстане и т.д.);   дающие в результате “bag of words”; к этому 

Первые два типа отчетов могут быть получены как виду также можно отнести метод TF-IDF;
в динамике по времени, так и статично (например,  дающие в результате обработки каждой смыс-
оценка СМИ по определенным критериям за по- ловой единицы корпуса (например, новости) его 
следний год). Отчет по аномалиям предполагает ана- “embedding” (векторизацию), например, распреде-
лиз динамики с привязкой публикации ко времени. ление по токенам / словам / фразам / предложени-

Концептуальное проектирование включало фор- ям. В этом случае возможно использование рекур-
мирование возможностей создаваемой программ- рентных нейронных сетей (recurrent neural networks, 
ной системы. Создаваемая программная система RNN);
должна обладать следующими возможностями:  дающие в результате обработки каждой смыс-

1. Обеспечение доступа к корпусам текстов; ловой единицы корпуса один “text embedding”; для 
2. Автоматизированная обработка корпуса тек- такой предобработки возможно использование 

стов, хранящихся в базе данных; стандартных методов классификации.
3. Занесение полученных характеристик в храни- Структурный анализ применяется для текстов 

лище (базу данных); художественного стиля и может быть выполнен су-
4. Возможность гибкого планирования выполне- ществующими на текущий момент инструментами, 

ния различных задач по обработке данных; например, [22]. Семантический анализ может вы-
5. Статистическая обработка полученных харак- полняться как на этапе предобработки текста (на-

теристик и их представление в удобном для иссле- пример, лемматизация слов), так и не выполняться 
дователя виде; вообще – выбранный инструментарий будет зави-

6. Обновление и улучшение применяемых алго- сеть от методов машинного обучения и может из-
ритмов для анализа корпуса текстов. меняться с течением времени. Прагматический 

В рамках текущего исследования поставлена за- анализ в системе осуществляется с использованием 
дача проектирования структуры системы обработки совокупности алгоритмов машинного обучения и 
корпусов текстов на естественном языке. Область составленных частотных словарей. Синтез результа-
применения данной системы начинается с анали- тов обеспечивается путем агрегирования результатов 
за корпусов текстов публицистического стиля. В в некоторые хранилища и вывод этих результатов в 
дальнейшем область применения системы может таком виде, который будет с наибольшей точностью 
будет распространена и на художественные тексты, удовлетворять потребностям пользователя.
в силу модульности системы и гибкости применяе- На основе вышеописанных возможностей систе-
мых технологий. мы можно выделить следующие требования к раз-

Проектируемая система состоит из следующих рабатываемой системе:
подсистем:  обеспечивать работу подсистем в виде отдель-

1. Подсистема обработки данных. Используется ных независимых компонентов, каждый из кото-
совокупность гибридных методов (машинное обу- рых можно оперативно заменить при необходимо-
чение с учителем и словари); сти; 

БИЗНЕС-ИНФОРМАТИКА   Т. 13  № 4 – 2019 
64



АНАЛИЗ ДАННЫХ И ИНТЕЛЛЕКТУАЛЬНЫЕ СИСТЕМЫ

 организовывать распараллеливание вычисле- Взаимодействие компонентов, – подсистемы по-
ний, в том числе на нескольких машинах; строения аналитики и подсистемы обработки дан-

 реализовывать автоматизированную обработку ных, – осуществляется с помощью системы хра-
корпуса текстов по запросу пользователя; нения. Общая схема взаимодействия компонентов 

 вести мониторинг выполнения задач в реаль- организована по принципу ETL (extract, transform, 
ном времени, в том числе обеспечивать оператив- load): от пользователя поступает запрос на получе-
ное информирование об исключениях; ние данных в ElasticSearch (если данные использу-

 выводить данные по результатам анализа тек- ются редко) или в Redis (если данные используются 
стов в интерфейсе пользователя; часто). Кроме того, подсистема обработки исполь-

 обновлять применяемые в системе алгоритмы зует Airflow-scheduler, который записывает в Redis 
для улучшения качества анализа и расширения их информацию о распределении задач по “workers”; 
области применения. они, в свою очередь, отчитываются в Redis о статусе 

выполнения своих задач. В процессе проектирова-
2. Структура системы ния могут применяться компоненты сообразно их 

Все компоненты системы организованы в виде целевому назначению.
Docker-контейнеров. Все контейнеры имеют до- Визуализация структуры системы показана на ри-
ступ к одной виртуальной сети, что обеспечивает сунке 1.
возможность обмена данными с использованием Анализ текстовых корпусов (на данном этапе – 
стандартных сетевых протоколов (TCP). Такая ре- корпуса новостных сообщений в казахстанских 
ализация обеспечивает работу подсистем в виде не- русскоязычных интернет-СМИ объемом 1,5 млн 
зависимых компонентов, каждый из которых мож- документов с постоянным пополнением) осущест-
но заменить при необходимости. вляется по загрузке “workers”. Новые документы 

Обработка данных

Airflow-задачи  
(ML-алгоритмы

Хранение 
данных

Сервисная информация

elasticsearch

Визуализация 
и управление 
результатами  
обработки данных

Рис. 1. Структура системы

БИЗНЕС-ИНФОРМАТИКА   Т. 13  № 4 – 2019   
65



АНАЛИЗ ДАННЫХ И ИНТЕЛЛЕКТУАЛЬНЫЕ СИСТЕМЫ

загружаются в подсистему обработки данных с фильтрацию по именованным сущностям (напри-
помощью специального парсера: на данном этапе мер, человек, организация, регион) в статьях. Такое 
загрузка происходит вручную по запросу пользо- разделение пользователей обусловлено последую-
вателя, в будущем получение новых новостей бу- щим использованием системы государственными 
дет настроено по расписанию. С заданной перио- органами;
дичностью будет выполняться генерация отчетов, 3. Разработчик – имеет доступ к панели админи-
требующих большого вычислительного времени; стратора Airflow и к репозиторию, в котором хра-
результаты будут размещены в хранилище (такой нятся Airflow DAG. Может добавлять и менять свои 
подход уменьшит время ожидания результатов от задачи, запускать и отслеживать их выполнение;
подсистемы обработки данных). На основе собран- 4. Администратор – супер-пользователь, имеет 
ных данных будет выполняться дополнительное полный набор прав по работе с системой.
обучение модели (1–2 раза в месяц), которое будет Распределение доступной функциональности по 
включать в себя пересчет набора ключевых харак- ролям представлена на рисунке 2.
теристик текстового корпуса. В случае, если дооб- В последующих подразделах более подробно опи-
учение модели не будет приводить к увеличению сан выбранный инструментарий для каждой из пе-
показателя точности (например, в задаче определе- речисленных подсистем.
ния тональности текста), предусмотрено использо-
вание других ML-алгоритмов или их совокупности. 2.1. Подсистема обработки данных

Ролевая система включает в себя следующие 
роли: В ходе анализа для удовлетворения перечислен-

1. Обычный пользователь – имеет доступ к базо- ных потребностей была выбрана программная 
вой функциональности системы: поиск, фильтра- платформа с открытым исходным кодом Apache 
ция, цифровые информационные панели (так на- Airflow. Основные компоненты данной платформы:
зываемые дашборды); 1. Airflow-worker – основной компонент, выпол-

2. Расширенный пользователь – имеет доступ к няющий обработку данных. Может быть горизон-
настраиваемым отчетам, автоматическим опове- тально масштабирован, в том числе на отдельные 
щениям о «горячих темах», возможность проводить сервера или облачные виртуальные машины. В 

СИСТЕМА

Формирование  
поисковых Фасетный  Работа 
запросов поиск с дашбордами

Генерация  Фильтрация  
отчетов по именованным  Подписка  

Обычный на «горячие темы» Разработчик
пользователь сущностям

Запуск Управление  Управление  
Airflow-задач репозиторием  репозиторием  

Airflow Airflow DAG Администратор
Расширенный 
пользователь

Мониторинг  
выполнения 

Airflow-задач

Рис. 2. Распределение доступа к системе по ролям

БИЗНЕС-ИНФОРМАТИКА   Т. 13  № 4 – 2019 
66



АНАЛИЗ ДАННЫХ И ИНТЕЛЛЕКТУАЛЬНЫЕ СИСТЕМЫ

текущем варианте архитектуры в образ контейне- ения продвинутых индексов для данных, возможно 
ра Airflow-worker заранее встраиваются необходи- выполнение сложных агрегаций в самой базе, в том 
мые зависимости. Однако принципиально процесс числе распределенно. ElasticSearch выполняет не-
инъекции зависимостей может происходить раз- сколько функций:
личным образом, в том числе, путем динамичного  основное хранилище для доступа, поиска и 
получения Docker-контейнеров из публичных или фильтрации данных конечным пользователем;
приватных репозиториев; основное хранилище для ETL (extract, transform. 

2. Airflow-scheduler – компонент, отвечающий Load) процессов обработки данных, в том числе за-
за назначение задач Airflow-workerам в порядке, пись любых промежуточных результатов в свобод-
определенном Airflow DAG-ами. Airflow DAG – не- ной форме; 
цикличный направленный граф, описывающий  хранилище для кэширования определенных 
порядок выполнения определенных задач, а также результатов вычислений, необходимых для постро-
содержащий информацию о расписании, приори- ения дашбордов и отчетов в системе; 
тетах, поведении в случае исключений и т.д.; ElasticSearch дублирует данные, хранящиеся в 

3. Airflow web server – веб-интерфейс, позволяю- PostgreSQL как персистентном хранилище, по-
щий отслеживать и контролировать ход выполне- скольку ElasticSearch является in-memory базой 
ния задач. данных без гарантий относительно персистентно-

Алгоритмы машинного обучения реализованы в сти и целостности данных.
системе как отдельные Airflow-задачи. 3. Redis – быстрое key-value хранилище, исполь-

зуемое для кэширования отдельных страниц и эле-
2.2. Хранилище ментов, а также для кэширования сессий авториза-

В системе предусмотрено три вида хранилищ: ции. В Redis хранятся служебные данные, а также 

1. PostgreSQL – выполняет роль персистентного кэш страниц и элементов, к которым происходит 

хранилища для структурированных данных. Его частый доступ.

использование обусловлено широкими возмож- Все три основных хранилища системы могут быть 

ностями данной реляционной базы данных (среди легко масштабированы на несколько отдельных 

свободно распространяемых продуктов) и взаимо- компьютеров. Поддерживается как горизонталь-

действием с широким кругом инструментов. Ос- ное масштабирование, так и репликация, при этом 

новные типы данных, хранящиеся в этой базе: ElasticSearch и Redis показывают близкое к линей-

 новости и метаданные; ному увеличение производительности при гори-

 обработанные данные на уровне разных базо- зонтальном масштабировании.

вых единиц анализа (токен / слово / фраза / пред- Для хранения служебных данных, таких как со-

ложение / текст), в том числе векторизации, резуль- стояния выполнения задач, используется отдельный 

таты лемматизации, очистки и др.; кластер PostgreSQL. Для запуска и отслеживания 

 результаты проведения тематического модели- прогресса задач используется связка Celery+Redis.

рования; 
 результаты классификации новостей по раз- 2.3. Подсистема построения  

аналитических отчетов
личным признакам (тональность, политизирован-
ность, социальная значимость и др.) Интерфейс подсистемы представляет их себя 

2. ElasticSearch – in-memory NoSQL хранилище, HTML+CSS+JS веб-сайт с доступом по протоко-
предназначенное для хранения неструктурирован- лу HTTP. Выбор стека технологий HTML+CSS+JS 
ных или слабоструктурированных данных, а также для интерфейса оправдан тем, что именно веб-
быстрого поиска (в том числе полнотекстового) и интерфейсы являются наиболее распространенной 
фильтрации и потокового доступа. В сравнении с и повсеместно поддерживаемой технологией по-
другими NoSQL базами для хранения документов строения интерфейсов пользователя, с возможно-
с произвольной структурой, такими как MongoDB стью доступа с любых устройств и операционных 
и CouchDB, ElasticSearch, выделяется расширен- систем из любой точки мира, при условии наличия 
ными инструментами для индексирования текста, веб-браузера и подключения к сети интернет.
позволяющими проводить полнотекстовый поиск Веб-приложение реализовано на Python фрейм-
по большим объемам документов практически в ре- ворке Django, в качестве веб-сервера выступает 
альном времени. Также ввиду возможности постро- Gunicorn, реверс-прокси – Nginx. Веб-приложение 

БИЗНЕС-ИНФОРМАТИКА   Т. 13  № 4 – 2019   
67



АНАЛИЗ ДАННЫХ И ИНТЕЛЛЕКТУАЛЬНЫЕ СИСТЕМЫ

имеет доступ как к персистентному хранилищу Распределение тематик, значений тональности и 
PostgreSQL, так и к ElasticSearch. В Django есть др. в статике, с фильтрациями и поиском; 
встроенный Cache Framework, который позволяет Выявление выбросов (аномалий) для аналитиче-
кэшировать страницы и элементы страниц в Redis. ских отчетов (самые «горячие» темы и др.). 
Например, если предполагается, что на страницу бу-
дут заходить часто, а считается она долго (например, Заключение
три секунды), то такую страницу лучше кешировать 
в Redis, что позволит ускорить доступ к необходи- В статье сформулированы требования к струк-

мым данным. туре программной системы, предназначенной для 

Фреймворк Django был выбран по следующим обработки больших (объемом более 1 млн еди-
причинам: ниц) корпусов текстовых документов, включая, в 

1. Возможность быстрой Agile-разработки веб- частности, реализацию автоматизированной об-
интерфейса и модели хранения данных. Скорость работки корпуса текстов, возможность распарал-
разработки с применением Django значительно леливания вычислений и составление аналитиче-
выше, чем при использовании таких аналогов, как ских отчетов. Также определены ролевые функции 
Spring (Java), Yii (PHP) и Node.js (JavaScript); пользователей. На этой основе разработана струк-

2. Ввиду того, что проект предполагает проведе- тура программной системы, включающая подси-
ние анализа данных и построение моделей машин- стему обработки данных на основе сервиса Apache 
ного обучения, в том числе для обработки есте- Airflow, несколько видов хранилищ, обеспечива-
ственных языков (natural language processing, NLP), ющих быстрый доступ к компонентам системы, 
язык Python является оптимальным выбором, так и подсистему построения аналитических отчетов, 
как большая часть “state-of-the-art” моделей и ме- которая формируется в приложении Python Django 
тодов ML/AI и NLP разрабатывается сообществом с использованием библиотеки визуализации Plotly. 
именно на языке Python; Гибкость системы позволяет подбирать разную 

3. Django ORM лучше работает с базой данных совокупность алгоритмов машинного обучения, 
PostgreSQL. обеспечивая прирост качества и точности анализа 

Веб-приложение реализует ряд страниц для филь- корпусов текстовых документов. 
трации, поиска и доступа к различным дашбордам В настоящее время система используется для ана-
и отчетам. На первом этапе реализации системы лиза корпусов новостных текстов с целью сравни-
дашборды считаются заранее вручную. При даль- тельного анализа новостных корпусов СМИ Казах-
нейшем развитии системы будет использоваться стана. 
фасетный поиск (faceted search) из Elastic Search. 
Для формирования графиков будет использоваться Благодарности
Python-библиотека визуализации данных Plotly.

Примерами информации, которую могут отобра- Работа финансировалась грантами BR05236839 
жать графики, являются: Министерства образования и науки Республики Ка-

Динамика по тональности (а также манипуля- захстан, при финансовой поддержке Российского 
тивность, политизированность и др.), тематикам, фонда фундаментальных исследований в рамках на-
количеству просмотров и комментариев с фильтра- учного проекта № 19-31-27001 и в рамках темы госу-
цией по СМИ, тематикам, авторам, тегам (включая дарственного задания № АААА-А17-117120670141-7 
полнотекстовый поиск); (№ 0316-2018-0009).

Литература

1. Барахнин В.Б., Кучин Я.И., Мухамедиев Р.И. К вопросу о постановке задачи выявления фейковых новостей и алгоритмах их 
мониторинга // Материалы III Международной научной конференции «Информатика и прикладная математика». Алматы,  
26–29 сентября 2018 г. С.113–118. 

2. Шокин Ю.И., Федотов А.М., Барахнин В.Б. Технология создания программных систем информационного обеспечения научной 
деятельности, работающих со слабоструктурированными документами // Вычислительные технологии. 2010. Т.15. № 6.  
С. 111–125.

3. Барахнин В.Б., Кожемякина О.Ю., Борзилова Ю.С. Проектирование информационной системы представления результатов 
комплексного анализа поэтических текстов // Вестник НГУ. Серия: Информационные технологии. 2019. Т. 17, № 1. С. 5–17.  
DOI: 10.25205/1818-7900-2019-17-1-5-17. 

БИЗНЕС-ИНФОРМАТИКА   Т. 13  № 4 – 2019 
68



АНАЛИЗ ДАННЫХ И ИНТЕЛЛЕКТУАЛЬНЫЕ СИСТЕМЫ

4. Автоматическая обработка текстов на естественном языке и компьютерная лингвистика / Е.И. Большакова и [др.]. М.: МИЭМ, 
2011.

5. Pang B., Lee L., Vaithyanathan S. Thumbs up? Sentiment classification using machine learning techniques // Proceedings of the 2002 
Conference on Empirical Methods in Natural Language Processing (EMNLP 2002). Philadelphia, PA, USA, 6–7 July 2002. P. 79–86. 
DOI: 10.3115/1118693.1118704. 

6. Choi Y., Cardie Cl., Riloff E., Patwardhan S. Identifying sources of opinions with conditional random fields and extraction patterns // 
Proceedings of the Conference on Human Language Technology and Empirical Methods in Natural Language Processing (HLT 2005). 
Vancouver, British Columbia, Canada, 6–8 October 2005. P. 355–362.

7. Manning C.D. Part-of-speech tagging from 97% to 100%: Is it time for some linguistics? // Proceedings of the 12th International Conference 
“Computational Linguistics and Intelligent Text Processing” (CICLing 2011). Tokyo, Japan, 20–26 February 2011. P. 171–189. 

8. Mukhamediev R., et al. Assessment of the dynamics of publication activity in the field of natural language processing and deep learning // 
Proceedings of the 4th International Conference on Digital Transformation and Global Society. St. Petersburg, 19–21 June 2019. Springer, 
2020 (in press). 

9. Tarasov D.S. Deep recurrent neural networks for multiple language aspect-based sentiment analysis // Computational Linguistics and 
Intellectual Technologies: Proceedings of Annual International Conference “Dialogue–2015”. 2015. No 14 (21). Vol. 2. P. 65–74. 

10. Garcia-Moya L., Anaya-Sanchez H., Berlanga-Llavori R. Retrieving product features and opinions from customer reviews // IEEE  
Intelligent Systems. 2013. Vol. 28. No 3. P. 19–27. DOI: 10.1109/MIS.2013.37.

11. Mavljutov R.R., Ostapuk N.A. Using basic syntactic relations for sentiment analysis // Proceedings of the International Conference  
“Dialogue 2013”. Bekasovo, Russia, 29 May – 2 June 2013. P. 101–110.

12. Prabowo R., Thelwall M. Sentiment analysis: A combined approach // Journal of Informetrics. 2009. Vol. 3, No 2. P. 143–157. 
DOI: 10.1016/j.joi.2009.01.003. 

13. Dai W., Xue G.-R., Yang Q., Yu Y. Transferring naive Bayes classifiers for text classification // Proceedings of the 22nd National Conference 
on Artificial intelligence (AAAI 07). Vancouver, British Columbia, Canada, 26–27 July 2007. Vol. 1. P. 540–545. 

14. Cortes C., Vapnik V. Support-vector networks // Machine Learning. 1995. Vol. 20. No 3. P. 273–297. DOI: 10.1023/A:1022627411411. 

15. Friedman J.H. Greedy function approximation: a gradient boosting machine // Annals of Statistics. 2001. Vol. 29. No 5. P. 1189–1232.

16. Zhang G.P. Neural networks for classification: A survey // IEEE Transactions on Systems, Man, and Cybernetics. Part C (Applications  
and Reviews). 2000. Vol. 30. No 4. P. 451–462.

17. Schmidhuber J. Deep learning in neural networks: An overview // Neural Networks. 2015. No 61. P. 85–117.  
DOI: 10.1016/j.neunet.2014.09.003. 

18. Devlin J., Chang M.-W., Lee K., Toutanova K. BERT: Pre-training of deep bidirectional transformers for language understanding // 
arXiv:1810.04805. 2018.

19. Vladimirova T.N., Vinogradova M.V., Vlasov A.I., Shatsky A.A. Assessment of news items objectivity in mass media of countries with 
intelligence systems: The Brexit case // Media Watch. 2019. Vol. 10. No 3. P. 471–483. DOI: 10.15655/mw/2019/v10i3/49680.

20. Романов А.С., Васильева М.И., Куртукова А.В., Мещеряков Р.В. Анализ тональности текста с использованием методов 
машинного обучения // 2nd International Conference “R. Piotrowski’s Readings in Language Engineering and Applied Linguistics  
(Saint-Petersburg, 2017). 2018. С. 86–95.

21. Methods to identify the destructive information / V.B. Barakhnin [et al.] // Journal of Physics: Conference Series. 2019. Vol. 1405. No 1. 
DOI: 10.1088/1742-6596/1405/1/012004. 

22. Barakhnin V.B., Kozhemyakina O.Y., Zabaykin A.V. The algorithms of complex analysis of Russian poetic texts for the purpose  
of automation of the process of creation of metric reference books and concordances // CEUR Workshop Proceedings. 2014. 
Vol. 1536. P. 138–143. 

Об авторах

Барахнин Владимир Борисович
доктор технических наук, доцент; 
ведущий научный сотрудник, Институт вычислительных технологий, Сибирское отделение Российской академии наук,  
630090, г. Новосибирск, пр-т Академика Лаврентьева, д. 6;
профессор факультета информационных технологий,  
Новосибирский национальный исследовательский государственный университет,  
630090, г. Новосибирск, ул. Пирогова, д. 1; 
E-mail: bar@ict.nsc.ru
ORCID: 0000-0003-3299-0507

Кожемякина Ольга Юрьевна 
кандидат филологических наук; 
старший научный сотрудник, Институт вычислительных технологий, Сибирское отделение Российской академии наук,  
630090, г. Новосибирск, пр-т Академика Лаврентьева, д. 6;
E-mail: olgakozhemyakina@mail.ru
ORCID: 0000-0003-3619-1120 

БИЗНЕС-ИНФОРМАТИКА   Т. 13  № 4 – 2019   
69



DATA ANALYSIS AND INTELLIGENCE SYSTEMS

Мухамедиев Равиль Ильгизович 
доктор инженерных наук; 
профессор, Satbayev University, Казахстан, 050013, г. Алматы, ул. Сатпаева, д. 22a; 
ведущий научный сотрудник, Институт информационных и вычислительных технологий, Казахстан, 
050010, г. Алматы, ул. Пушкина, д. 125; 
профессор, Университет ISMA, Латвия, LV-1019, г. Рига, ул. Ломоносова, 1;
E-mail: ravil.muhamedyev@gmail.com
ORCID: 0000-0002-3727-043X

Борзилова Юлия Сергеевна 
аспирант, Институт вычислительных технологий, Сибирское отделение Российской академии наук, 
630090, г. Новосибирск, пр-т Академика Лаврентьева, д. 6;
E-mail: i.borzilova@alumni.nsu.ru
ORCID: 0000-0002-8265-9356

Якунин Кирилл Олегович  
аспирант, Satbayev University, Казахстан, 050013, г. Алматы, ул. Сатпаева, д. 22a; 
инженер-программист, Институт информационных и вычислительных технологий, Казахстан,  
050010, г. Алматы, ул. Пушкина, д. 125; 
E-mail: yakunin.k@mail.ru
ORCID: 0000-0002-7378-9212

The design of the structure of the software system  
for processing text document corpus

Vladimir B. Barakhnin a,b

E-mail: bar@ict.nsc.ru

Olga Yu. Kozhemyakina a 
E-mail: olgakozhemyakina@mail.ru

Ravil I. Mukhamediev c,d,e 
E-mail: ravil.muhamedyev@gmail.com

Yulia S. Borzilova a 
E-mail: i.borzilova@alumni.nsu.ru

Kirill O. Yakunin c,d 
E-mail: yakunin.k@mail.ru

a Institute of Computational Technologies, Siberian Branch of the Russian Academy of Sciences
Address: 6, Academician M.A. Lavrentiev Avenue, Novosibirsk 630090, Russia

b Novosibirsk State University
Address: 1, Pirogova Street, Novosibirsk 630090, Russia

c Satbayev University 
Address: 22a, Satbayev Street, Almaty 050013, Kazakhstan

d Institute of Information and Computational Technologies 
Address: 125, Pushkin Street, Almaty 050010, Kazakhstan

e ISMA University
Address: 1, Lomonosova Street, Riga LV-1019, Latvia 

BUSINESS INFORMATICS   Vol. 13  No 4 – 2019
70



DATA ANALYSIS AND INTELLIGENCE SYSTEMS

Abstract
One of the most difficult tasks in the field of data mining is the development of universal tools for the analysis of texts 

written in the literary and business styles. A popular path in the development of algorithms for processing text document 
corpus is the use of machine learning methods that allow one to solve NLP (natural language processing) tasks. The basis for 
research in the field of natural language processing is to be found in the following factors: the specificity of the structure of 
literary and business style texts (all of which requires the formation of separate datasets and, in the case of machine learning 
methods, the additional feature selection) and the lack of complete systems of mass processing of text documents for the 
Russian language (in relation to the scientific community-in the commercial environment, there are some systems of smaller 
scale, which are solving highly specialized tasks, for example, the definition of the tonality of the text). The aim of the current 
study is to design and further develop the structure of a text document corpus processing system. The design took into 
account the requirements for large-scale systems: modularity, the ability to scale components, the conditional independence 
of components. The system we designed is a set of components, each of which is formed and used in the form of Docker-
containers. The levels of the system are: the data processing level, the data storage level, the visualization and management 
of the results of data processing (visualization and management level). At the data processing level, the text documents (for 
example, news events) are collected (scrapped) and further processed using an ensemble of machine learning methods, each 
of which is implemented in the system as a separate Airflow-task. The results are placed for storage in a relational database; 
ElasticSearch is used to increase the speed of data search (more than 1 million units). The visualization of statistics which is 
obtained as a result of the algorithms is carried out using the Plotly plugin. The administration and the viewing of processed 
texts are available through a web-interface using the Django framework. The general scheme of the interaction of components 
is organized on the principle of ETL (extract, transform, load). Currently the system is used to analyze the corpus of news texts 
in order to identify information of a destructive nature. In the future, we expect to improve the system and to publish the 
components in the open repository GitHub for access by the scientific community.

Key words: natural language processing; streaming word processing; text analysis information system; development of a text 
corpus processing system.

Citation: Barakhnin V.B., Kozhemyakina O.Yu., Mukhamediev R.I., Borzilova Yu.S., Yakunin K.O. (2019) The design 
of the structure of the software system for processing text document corpus. Business Informatics, vol. 13, no 4, pp. 60–72. 
DOI: 10.17323/1998-0663.2019.4.60.72 

References

1. Barakhnin V.B., Kuchin Ya.I., Mukhamediev R.I. (2018). On the problem of identification of fake news and of the algorithms for monitoring  
them. Proceedings of the III International Conference on Informatics and Applied Mathematics, Almaty, Kazakhstan, 26–29 September 2018, 
pp.113–118 (in Russian). 

2. Shokin Yu.I., Fedotov A.M., Barakhnin V.B. (2010) Technologies for construction of processing software systems dealing with semistructured  
documents aimed at information support of scientific activity. Computational Technologies, vol. 15, no 6, pp. 111–125 (in Russian).

3. Barakhnin V.B., Kozhemyakina O.Yu., Borzilova Yu.S. (2019) The development of the information system of the representation of the complex  
analysis results for the poetic texts. Vestnik NSU. Series: Information Technologies, vol. 17, no 1, pp. 5–17 (in Russian). 
DOI: 10.25205/1818-7900-2019-17-1-5-17.

4. Bolshakova E.I., Klishinskii E.S., Lande D.V., Noskov A.A., Peskova O.V., Yagunova E.V. (2011) Automatic natural language text processing and  
computer linguistics. Moscow: MIEM (in Russian). 

5. Pang B., Lee L., Vaithyanathan S. (2002) Thumbs up? Sentiment classification using machine learning techniques. Proceedings of the 
2002 Conference on Empirical Methods in Natural Language Processing (EMNLP 2002), Philadelphia, PA, USA, 6–7 July 2002, pp. 79–86. 
DOI: 10.3115/1118693.1118704. 

6. Choi Y., Cardie Cl., Riloff E., Patwardhan S. (2005) Identifying sources of opinions with conditional random fields and extraction patterns.  
Proceedings of the Conference on Human Language Technology and Empirical Methods in Natural Language Processing (HLT 2005). Vancouver,  
British Columbia, Canada, 6–8 October 2005, pp. 355–362.

7. Manning C.D. (2011) Part-of-speech tagging from 97% to 100%: Is it time for some linguistics? Proceedings of the 12th International Conference 
“Computational Linguistics and Intelligent Text Processing” (CICLing 2011), Tokyo, Japan, 20–26 February 2011, pp. 171–189. 

8. Mukhamediev R., et al. (2020) Assessment of the dynamics of publication activity in the field of natural language processing and deep learning. 
Proceedings of the 4th International Conference on Digital Transformation and Global Society, St. Petersburg, Russia, 19–21 June 2019. Springer,  
2020 (in press). 

9. Tarasov D.S. (2015) Deep recurrent neural networks for multiple language aspect-based sentiment analysis. Computational Linguistics  
and Intellectual Technologies: Proceedings of Annual International Conference “Dialogue–2015”, no 14 (21), vol. 2, pp. 65–74. 

10. Garcia-Moya L., Anaya-Sanchez H., Berlanga-Llavori R. (2013) Retrieving product features and opinions from customer reviews. IEEE  
Intelligent Systems, vol. 28, no 3, pp. 19–27. DOI: 10.1109/MIS.2013.37.

11. Mavljutov R.R., Ostapuk N.A. (2013) Using basic syntactic relations for sentiment analysis. Proceedings of the International Conference  
“Dialogue 2013”, Bekasovo, Russia, 29 May – 2 June 2013, pp. 101–110.

12. Prabowo R., Thelwall M. (2009) Sentiment analysis: A combined approach. Journal of Informetrics, vol. 3, no 2, pp. 143–157.  
DOI: 10.1016/j.joi.2009.01.003. 

BUSINESS INFORMATICS   Vol. 13  No 4 – 2019
71



DATA ANALYSIS AND INTELLIGENCE SYSTEMS

13. Dai W., Xue G.-R., Yang Q., Yu Y. (2007) Transferring naive Bayes classifiers for text classification. Proceedings of the 22nd National Conference  
on Artificial intelligence (AAAI 07). Vancouver, British Columbia, Canada, 26–27 July 2007, vol. 1, pp. 540–545. 

14. Cortes C., Vapnik V. (1995) Support-vector networks. Machine Learning, vol. 20, no 3, pp. 273–297. DOI: 10.1023/A:1022627411411. 
15. Friedman J.H. (2001) Greedy function approximation: a gradient boosting machine. Annals of Statistics, vol. 29, no 5, pp. 1189–1232.
16. Zhang G.P. (2000) Neural networks for classification: A survey. IEEE Transactions on Systems, Man, and Cybernetics. Part C (Applications and  

Reviews), vol. 30, no 4, pp. 451–462.
17. Schmidhuber J. (2015) Deep learning in neural networks: An overview. Neural Networks, no 61, pp. 85–117. DOI: 10.1016/j.neunet.2014.09.003. 
18. Devlin J., Chang M.-W., Lee K., Toutanova K. (2018) BERT: Pre-training of deep bidirectional transformers for language understanding.  

arXiv:1810.04805. 
19. Vladimirova T.N., Vinogradova M.V., Vlasov A.I., Shatsky A.A. (2019) Assessment of news items objectivity in mass media of countries with 

 intelligence systems: The Brexit case. Media Watch, vol. 10, no 3, pp. 471–483. DOI: 10.15655/mw/2019/v10i3/49680.
20. Romanov A.S., Vasilieva M.I., Kurtukova A.V., Meshcheryakov R.V. (2018) Sentiment analysis of text using machine learning techniques.  

Proceedings of the 2nd International Conference “R. Piotrowski’s Readings in Language Engineering and Applied Linguistics (Saint-Petersburg, 2017), 
pp. 86–95 (in Russian).

21. Barakhnin V.B., Mukhamedyev R.I., Mussabaev R.R., Kozhemyakina O.Yu., Issayeva A., Kuchin Ya.I., Murzakhmetov S.B., Yakunin K.O. (2019) 
Methods to identify the destructive information. Journal of Physics: Conference Series, vol. 1405, no 1. DOI: 10.1088/1742-6596/1405/1/012004. 

22. Barakhnin V.B., Kozhemyakina O.Y., Zabaykin A.V. (2014) The algorithms of complex analysis of Russian poetic texts for the purpose of automation 
of the process of creation of metric reference books and concordances. CEUR Workshop Proceedings, vol. 1536, pp. 138–143. 

About the authors

Vladimir B. Barakhnin
Dr. Sci. (Tech.), Associate Professor; 
Leader Researcher, Institute of Computational Technologies, Siberian Branch of the Russian Academy of Sciences,  
6, Academician M.A. Lavrentiev Avenue, Novosibirsk 630090, Russia;
Professor, Faculty of Information Technologies, Novosibirsk State University, 1, Pirogova Street, Novosibirsk 630090, Russia; 
E-mail: bar@ict.nsc.ru
ORCID: 0000-0003-3299-0507

Olga Yu. Kozhemyakina
Cand. Sci. (Philol.); 
Senior Researcher, Institute of Computational Technologies, Siberian Branch of the Russian Academy of Sciences,  
6, Academician M.A. Lavrentiev Avenue, Novosibirsk 630090, Russia;
E-mail: olgakozhemyakina@mail.ru
ORCID: 0000-0003-3619-1120 

Ravil I. Mukhamediev
Dr. Sci. (Eng.); 
Professor, Satbayev University, 22a, Satbayev Street, Almaty 050013, Kazakhstan; 
Leader Researcher, Institute of Information and Computational Technologies, 125, Pushkin Street, Almaty 050010, Kazakhstan; 
Professor, ISMA University, 1, Lomonosova Street, Riga LV-1019, Latvia; 
E-mail: ravil.muhamedyev@gmail.com
ORCID: 0000-0002-3727-043X

Yulia S. Borzilova
Doctoral Student, Institute of Computational Technologies, Siberian Branch of the Russian Academy of Sciences,  
6, Academician M.A. Lavrentiev Avenue, Novosibirsk 630090, Russia;
E-mail: i.borzilova@alumni.nsu.ru
ORCID: 0000-0002-8265-9356

Kirill O. Yakunin
Doctoral Student, Satbayev University, 22a, Satbayev Street, Almaty 050013, Kazakhstan; 
Developer Engineer, Institute of Information and Computational Technologies, 125, Pushkin Street, Almaty 050010, Kazakhstan; 
E-mail: yakunin.k@mail.ru
ORCID: 0000-0002-7378-9212

BUSINESS INFORMATICS   Vol. 13  No 4 – 2019
72