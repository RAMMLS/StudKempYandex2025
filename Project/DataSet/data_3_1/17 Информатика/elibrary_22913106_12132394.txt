АНАЛИЗ ДАННЫХ И ИНТЕЛЛЕКТУАЛЬНЫЕ СИСТЕМЫ

ВИЗУАЛИЗАЦИЯ И АНАЛИЗ ГРАФОВ 
БОЛЬШИХ РАЗМЕРОВ

М.И. КОЛОМЕЙЧЕНКО 
выпускник магистратуры, 
Национальный исследовательский университет «Высшая школа экономики» 
Адрес: 101000, г. Москва, ул. Мясницкая, д. 20 
E-mail: maxim.kolomeychenko@mail.ru

А.М. ЧЕПОВСКИЙ
кандидат технических наук, доцент кафедры информационной безопасности,
факультет бизнес-информатики, Национальный исследовательский университет
«Высшая школа экономики»; профессор кафедры прикладной математики
и моделирования систем, Институт коммуникаций и медиабизнеса, 
Московский государственный университет печати им. Ивана Федорова  
Адрес: 127550, г. Москва, ул. Прянишникова, д. 2а 
E-mail: achepovskiy@hse.ru  

Задача визуализации графов больших размеров возникает в различных областях социологии и маркетинга. 
Актуальность данной работы определяется потребностью в программном комплексе для анализа и визуализации 
таких графов. В работе приводится анализ нескольких программных продуктов и выделяются их недостатки: 
отсутствие кроссплатформенности и специализированных графовых хранилищ, а также невозможность 
работы с графами больших размеров.

Приводится детальное описание общей архитектуры разработанного программного обеспечения и 
каждого модуля в отдельности, способы взаимодействия основных модулей. Для хранения графов используется 
разработанное специализированное графовое хранилище, позволяющее обрабатывать графы, имеющие 
порядка 100 миллионов вершин и нескольких миллиардов связей. Также представлено описание основных 
принципов организации хранилища. Использование собственной файловой системы обеспечивает отсутствие 
дополнительных системных вызовов при работе с хранилищем и отсутствие сложной системы адресации 
и лишних механизмов, что приводит к избавлению от дополнительных накладных расходов, связанных с 
организацией хранения данных. 

Кроме того, присутствует описание методики работы модуля визуализации данных, используемых структур 
данных и алгоритмов машинной графики, которые позволяют работать с графами, состоящими из нескольких 
миллионов вершин, в режиме реального времени. 

Отдельно стоит отметить широкий набор алгоритмов автоматического размещения графов: случайное 
размещение, круговое размещение, круговое покомпонентное размещение, размещение «павлиний хвост», 
размещения «одна и две линии темы», размещения, основанные на алгоритме выделения сообществ или на 
алгоритме оценки связности.  Приводится детальное описание каждого приведенного выше алгоритма. 

Особое внимание стоит уделить используемым методам анализа графа. Разработаны алгоритмы выделения 
сообществ в социальных сетях, оценки связности графа, поиск кратчайших путей между любой парой вершин, 
объединение и пересечение графов и многое другое. 

Ключевой особенностью всех приведенных в работе алгоритмов является возможность работы с графами 
больших размеров. 

Ключевые слова: граф, анализ графа, визуализация графа, графовое хранилище, авторазмещение.

БИЗНЕС-ИНФОРМАТИКА №4(30)–2014 г. 7



АНАЛИЗ ДАННЫХ И ИНТЕЛЛЕКТУАЛЬНЫЕ СИСТЕМЫ

Введение
Данные в различных 

ри анализе графов социальных сетей [1] форматах

Пвозникает задача визуального представ-

ления их структур. Актуальность работы 

определяется потребностью в программном ком- Алгоритмы Модуль
плексе для анализа и визуализации графов больших анализа визуализации

Модуль
размеров, возникающей в задачах социологическо- конвертации
го и маркетингового анализа. данных

Алгоритмы
Представленное программное обеспечение пре- авторазмещений

доставляет широкие возможности для визуализа-

ции и анализа сетей больших размеров. Область 

применения обширна [5] и затрагивает многие 

смежные дисциплины, такие как социология, пси-
Хранилище Хранилище

хология, политология, маркетинг и т.д. Существу-
графов визуализации

ют такие программные продукты для анализа гра- графов

фов, как i2 Analyst’s Notebook [9], Sentinel Visualizer 

[12], CrimeLink [8], Xanalys Link Explorer [14] и Tom Рис 1. Архитектура программного комплекса 
Sawyer Software [13]. Несмотря на некоторые разли-

чия в деталях, по предоставляемой функциональ-
вана обработка данных из таблиц Excel, файлов с 

ности и назначению эти системы визуализации во 
расширениями: doc, html, xml, реляционной БД, 

многом схожи.
или текстовых файлов специального формата, со-

i2 Analyst’s Notebook, CrimeLink, Sentinel Visualizer держащих структурированные данные. Конвертер 
и Xanalys Link Explorer являются программными выделяет из файлов табличные данные и преобра-
продуктами, предназначенными для анализа си- зовывает их в граф, который сохраняется в файло-
стем взаимосвязанных объектов и изучения ди- вой системе хранилища графа. 
намики последовательных событий. Tom Sawyer 

Принципиальной основой архитектуры про-
Software представляет собой набор библиотек для 

граммного комплекса является наличие двух режи-
создания инструментов визуализации и анализа се-

мов хранения графа:
тей из различных предметных областей.

 базовое хранение, предназначенное для хране-
В перечисленных выше системах наблюдается 

ния графов большого размера (миллионы вершин 
ряд недостатков: отсутствие платформенно-незави-

и ребер);
симых решений, отсутствие собственных специа-

 локальное хранение, предназначенное для хра-
лизированных хранилищ, а также то, что системы 

нения графов, которые являются подграфами, по-
не ориентированы на работу с графами больших 

лученными запросами к базовым графам и резуль-
размеров.

татами обработки клиентским приложением.

1. Архитектура программного комплекса В качестве базовой структуры хранилища ис-

анализа графов пользуется специализированная файловая система 

[4]. Данная система реализуется внутри некоторого 
Программный комплекс предназначен для ви-

файла стандартной файловой системы компьютера, 
зуального анализа графов взаимодействующих 

поэтому под логическим файлом будем понимать 
объектов (например, социальной сети) и автома-

файл, принадлежащий данной специализированной 
тизированного размещения вершин и связей при 

системе и состоящий из записей переменной длины. 
визуализации в соответствии с задаваемыми изо-

Использование собственной файловой системы 
бразительными соглашениями.

обеспечивает отсутствие дополнительных систем-
Основные компоненты программного комплек- ных вызовов при работе с файловой системой. От-

са и взаимодействие модулей, составляющих про- сутствие сложной системы адресации (структуры 
граммный комплекс, представлены на рис. 1. каталогов) и лишних механизмов (права доступа) 

Импорт данных в приложение осуществляется с приводит к отсутствию дополнительных наклад-

помощью модуля конвертации данных. Реализо- ных расходов на организацию хранения данных. 

8 БИЗНЕС-ИНФОРМАТИКА №4(30)–2014 г.



АНАЛИЗ ДАННЫХ И ИНТЕЛЛЕКТУАЛЬНЫЕ СИСТЕМЫ

Собственная файловая система позволяет органи- <идентификатор вершины> <координата x> <ко-

зовывать управление буферизацией и хранением ордината y> <идентификатор способа визуального 

данных, которое не зависит от особенностей опера- представления вершины> <дополнительные пара-

ционной системы. метры конкретного визуального представления>. 

Для более быстрого выполнения операций поис- После сохраняется визуализация всех связей в фор-

ка вершин по конкретным значениям атрибутов в мате <идентификатор связи> <идентификатор вер-
шины начала> <идентификатор вершины конца> 

хранилище присутствует специализированный ин-
<стиль> <ширина> <отступ первого сегмента изло-

декс по атрибутам вершин.  Данный индекс также 
ма> <направление>. Далее идет запись всех изломов 

использует собственную копию специализирован-
связей в формате <идентификатор вершины начала 

ной файловой системы.
связей> <идентификатор вершины конца связей> 

Используемые структуры данных позволяют про-
<величина отступа между параллельно идущими 

водить эффективные объединение и пересечение 
связями> <количество изломов> <массив коорди-

графов. Данная структура хранилища и предусмо- нат всех изломов>.
тренные операции были протестированы на гра-

Ниже отдельно приведено описание модуля ви-
фах, имеющих порядка 100 миллионов вершин и 

зуализации и модулей, реализующих алгоритмы ав-
нескольких миллиардов связей.

торазмещения и анализа графа.
К каждому конкретному сохраненному графу 

может быть привязано любое количество вариан- 2. Модуль визуализации графа
тов визуализации локального графа, которые со-

Спроектированы эффективные структуры дан-
храняются в хранилищах вариантов визуализации. 

ных, которые позволили создать развитую систему 
Под вариантом визуализации понимается располо-

редактирования и анализа без ущерба производи-
жение вершин и связей между собой, иконки всех 

тельности и с допустимым объемом занимаемой 
вершин, способы визуализации всех вершин, икон-

памяти. Для быстрого доступа к вершинам и связям 
ки всех атрибутов и их стили, стили всех связей и 

используются сбалансированные бинарные деревья 
координаты их точек изломов.

поиска. Для быстрого доступа к инцидентным свя-
Схема визуализации для графа сохраняется в би- зям вершины используется еще одна структура – 

нарный файл. Сначала записывается строковый сбалансированное бинарное дерево поиска, ключа-
уникальный идентификатор хранилища для того, ми в котором являются указатели на вершины, а хра-
чтобы ввести однозначное соответствие схемы ви- нимым значением для каждого ключа (вершины) – 
зуализации и графа. Затем в файл записывается вся сбалансированное бинарное дерево поиска, ключа-
коллекция иконок вершин в формате <имя иконки> ми в котором являются указатели на связи. В данной 
<изображение иконки>. Далее в файл записывает- структуре для каждой вершины хранится набор ин-
ся вся коллекция типов атрибутов в формате <имя> цидентных связей. В табл. 1 приведен анализ эф-
<цвет> <флаг отображения> <имя иконки> <икон- фективности базовых операций с выбранной струк-
ка> <порядковый номер при визуализации> <флаг турой при работе с графом, полностью загруженным 
отображения иконки> <флаг отображения имени> в оперативную память. Пусть V – множество вершин 
<тип выравнивания текстового значения> <тип хра- графа, E – множество ребер графа.
нимого значения>.  Затем в файл записывается вся 

Таблица 1. 
коллекция типов связей в формате <имя типа связи> 

Асимптотика операций при работе с графом
<цвет типа связи> <ширина линии> <стиль линии> 

<направление линии>. Далее записываются груп-
Операция Асимптотика операций

пировки вершин и связей: для каждой групповой 

вершины записывается ее идентификатор и массив Добавление связи O (log (|E |)) 
идентификаторов вершин, из которых она состоит; 

Удаление связи O (log (|E |))
для каждой групповой связи записывается ее иден-

Добавление вершины O 
тификатор и массив идентификаторов связей, из (log (|V |))

которых она состоит. Запись групповых вершин и Удаление вершины O (log (|V |))

связей происходит с учетом последовательности и Поиск вершины O (log (|V |))
вложенности группировок. Затем последовательно 

Поиск связи O (log (|E |))
сохраняется визуализация всех вершин в формате 

БИЗНЕС-ИНФОРМАТИКА №4(30)–2014 г. 9



АНАЛИЗ ДАННЫХ И ИНТЕЛЛЕКТУАЛЬНЫЕ СИСТЕМЫ

Обем занимаемой памяти: O (с  | V  | + с  | E  |), где задачу хранения прорисовки связей и их быструю 
1 2

с = 2, с = 3. визуализацию.
1 2

Так как все вершины и связи хранятся в бинар- При работе с большими графами критичными 

ных сбалансированных деревьях поиска, все оцен- являются не только все без исключения базовые 

ки времени работы и объема занимаемой памяти операции, но и объем требуемой памяти. Разрабо-

имеют логарифмическую сложность. Для хранения танные структуры данных эффективно сочетают в 

всей структуры графа используется три базовые себе оба требования.

структуры данных: множество всех вершин, мно- В программном комплексе предусмотрено не-
жество всех связей и структура, сопоставляющая сколько изобразительных соглашений для вершин: 
каждой вершине множество ее инцидентных свя- иконки, линии темы, таблицы. Отдельно стоит от-
зей. Константа с  получена за счет двойного хране-

1 метить способ представления вершин в виде линии 
ния каждой вершины в первой и третьей структу- темы. Линия темы – это вершина, которая пред-
рах. Константа с  получена за счет хранения каждой 

2 ставляется в виде горизонтального отрезка с икон-
связи во второй структуре и двойного хранения кой, которая может перемещаться по всей длине 
каждой связи в третьей структуре данных. отрезка. Если инцидентные линии темы вершины 

В вышеописанной структуре данных в каждой находятся в вертикальной полосе, ограниченной 

вершине хранится вся необходимая информация концами линии темы, то все связи между такими 

для визуализации. Со связями дело обстоит не- вершинами и линией темы будут вертикальными 

сколько иначе: данные по изображению связи в ка- и перпендикулярно соединяться с линией темы. 

честве ломаной линии хранятся в отдельной струк- Остальные инцидентные линии темы вершины 

туре данных. будут соединяться с ближайшими концами линии 
темы и не будут вертикальными. Положение кон-

Введем следующие структуры данных. Одна 
цов линии темы и ее длина может меняться. Ис-

структура данных будет содержать пару указате-
пользование данного способа представления по-

лей на вершины c заданной операцией сравнения. 
зволяет эффективно решать задачу визуализации 

Другая структура содержит координаты ломаной 
для некоторых графов. Доступна визуализация 

линии, которая выступает в качестве направляю-
множественных связей с изломами между верши-

щей при прорисовке всех связей между двумя объ-
нами, с возможностью задания ширины, цвета и 

ектами. Связь будет визуализироваться с тем же 
типа линии. Для атрибутов также предусмотрено 

количеством сегментов, идущих параллельно на-
множество способов и настроек отображения.

правляющей линии, за исключением двух: первого 

и последнего. Кроме того, во второй структуре так- Помимо богатой функциональности отображе-

же будет храниться дополнительная информация ния различных элементов графа, разработанный 

о различных параметрах сдвигов относительно на- модуль визуализации позволяет манипулировать 

правляющей линии. большими графами, размеры которых достигают 
миллиона вершин и нескольких миллионов связей, 

Более того, экземпляр класса будет содержать в 
за счет специально разработанных и оптимизиро-

себе сбалансированное бинарное дерево поиска, 
ванных алгоритмов машинной графики.

ключами в котором будут являться указатели на 

связи. Это сделано для того, чтобы иметь быстрый 
3. Средства автоматического размещения 

доступ ко всем объектам, которые должны быть 
при визуализации графов

визуализированы относительно заданной направ-

ляющей кривой, так как для каждой связи не под- Модуль автоматического размещения объектов 
разумевается хранение координат ее прорисовки. предназначен для целей визуального анализа гра-
Все координаты будут вычисляться во время вы- фа и реализует графические схемы [6, 10] типа пав-
полнения программы. Тогда можно создать сба- линий хвост, линия темы, круговое размещение, 
лансированное бинарное дерево поиска, ключами покомпонентное круговое размещение, а также 
в котором будут структуры, содержащие пары вер- размещение, основанное на алгоритме выделения 
шин, а значением будет структура с координатами сообществ в сети.
ломаной линии. Размещение вершин и связей является нетриви-

Таким образом, мы сможем сократить объем альной задачей и в ручном режиме может требовать 
хранимой памяти, тем самым эффективно решать значительных временных затрат уже для графов 

10 БИЗНЕС-ИНФОРМАТИКА №4(30)–2014 г.



АНАЛИЗ ДАННЫХ И ИНТЕЛЛЕКТУАЛЬНЫЕ СИСТЕМЫ

с количеством порядка десяти. Поэтому наряду с сечений максимально уменьшится, после чего вы-
возможностью ручного размещения вершин и свя- полняется перестановка. Для заданной вершины 
зей предоставляет несколько вариантов автомати- процедура продолжается до тех пор, пока нельзя 
ческого размещения элементов. будет найти соседнюю вершину, перестановка с 

которой минимизирует количество пересечений. 
3.1. Случайное Асимптотическая сложность данной процедуры 

размещение объектов O (nm). Экспериментальные результаты [7] пока-
зывают, что данную операцию достаточно сделать 

Для заданной сети подбирается прямоугольная 
несколько раз для случайного набора вершин для 

область нужного размера. Затем в эту область слу-
достижения локального минимума функции коли-

чайным образом помещаются все вершины и их 
чества пересечений.  

связи. Распределение вершин в заданной области 
является равномерным. 

3.3. Круговое покомпонентное 
размещение объектов

3.2. Круговое
 размещение объектов Сначала для исходной графа выполняется поиск 

всех компонент связности с помощью алгоритма 
Узлы равномерно располагаются по одной 

обхода в ширину. В результате получено разбиение 
окружности. Распределение по окружности произ-

С графа G на непересекающиеся множества:
водится на основе структуры связей. Минимизация 
пересечений в круговом размещении является NP-
трудной задачей [7]. 

Затем узлы каждой компоненты c
Пусть G  располагаются 

(V, E) – граф, где V – множество вершин, i

E – множество ребер, n = |V |, m = |E по окружности на основе структуры их связей по 
|. Используется 

алгоритму кругового размещения объектов. Цен-
двухфазный алгоритм [7] минимизации пересечений. 

тры окружностей размещаются на одной горизон-
На первом этапе вершины добавляются в один 

тальной прямой. Пример представлен на рис. 2.
их концов линейного размещения объектов. Пусть 
N (v) = {u v V : {u, v}  E } – множество смежных вер-

3.4. Размещение 
шины для вершины v. Выбор первой добавляе-

«одна линия темы»
мой вершины определяется следующим образом: 
v  = ar gmax р и а

v  – ве ш н  с максимальной степенью. 
0 V  Из сети выбирается вершина для представления в 

Последовательность добавления остальных вершин виде линии темы. Затем остальные вершины разме-
определяется последовательностью обхода всех щаются относительно заданной линии темы сверху 
вершин начиная с вершины v  алгоритмом обхода 

0 и снизу последовательно друг за другом, то есть на 
в ширину. После добавления всех вершин в линей- каждом вертикальном уровне расположено не бо-
ное размещение оно естественным образом транс- лее двух вершин: одна сверху и одна снизу. Длина 
формируется в круговое путем соединения концов. отрезка линии темы подбирается так, чтобы второ-
Ассимптотическая сложность данного этапа O (n). степенные объекты, соединенные с линией темы, 

На втором этапе выполняется минимизация пе- соединялись с ней вертикальными связями. По-

ресечения связей. Для каждой вершины v   V про- рядок расположения вторичных объектов можно 

сматриваются все вершины u  N (v) и выбирается конфигурировать различными способами. Пример 
та, при перестановке с которой количество пере- размещения представлен на рис. 3.

Рис. 2. Круговое покомпонентное размещение объектов

БИЗНЕС-ИНФОРМАТИКА №4(30)–2014 г. 11



АНАЛИЗ ДАННЫХ И ИНТЕЛЛЕКТУАЛЬНЫЕ СИСТЕМЫ

Рис. 3. Размещение «одна линия темы»

3.5. Размещение 4. Определяется порядок добавления вторичных 

«две линии темы» вершин v , ..., v . 
1 m 

5. Путем добавления ребер между вершинами вы-
Пусть G (V, E) – граф, где V –множество вершин, 

деленного множества и последующего добавления 
E – множество ребер, n = | V |, m = | E |.

вторичных вершин с инцидентными им ребрами 
Из сети выбираются два объекта для представле- производится построение многополосного раз-

ния в виде линии темы   = {u , u }  V. Назовем вер-
1 2 мещения, гарантирующее отсутствие пересечений 

шины из множества V \  вторичными. между пометками.

Для визуализации графа G предлагается ис- Опишем общие принципы работы алгоритма. Из 
пользовать многополосное размещение [2]. Про- графа выбираются два объекта для представления 
иллюстрируем предлагаемый способ на примере, в виде линии темы. Линии темы размещаются на 
когда выделенное множество  содержит две вер- заданном расстоянии друг от друга. Затем осталь-
шины (рис. 4). Вершины выделенного множества ные объекты размещаются относительно заданных 
u , u  представляются в виде горизонтальных ли-

1 2 линий тем сверху и снизу последовательно друг за 
ний. Пространство между этими линиями разде- другом. Длины отрезков линий тем подбираются 
лено на три полосы: средняя полоса используется так, чтобы второстепенные объекты, соединенные 
для размещения пометок вторичных вершин, а с линиями темы, соединялись с ними вертикальны-
крайние полосы – для размещения пометок на ре- ми связями. Стоит заметить, что все вершины, рас-
брах. В общем случае, если выделенное множество положенные над первой линией темы соединены 

 содержит n вершин, то для размещения пометок только с ней и между собой; все вершины, располо-
вторичных вершин используется n+1 полоса,  а для женные под второй линией темы соединены только 
размещения пометок на ребрах – 2n полос соот- с ней и между собой; между двумя линиями темы 
ветственно. Для построения многополосного раз- отображаются их связи и объекты, имеющие связи 
мещения предлагается использовать следующий с обеими линиями темы. Порядок расположения 
алгоритм, состоящий из пяти шагов. вторичных объектов можно конфигурировать раз-

1. На выделенном множестве  фиксируется не- личными способами, пример на рис. 4.

который порядок u , ..., u , задающий относитель-
1 n 

ное расположение горизонтальных линий, соответ- 3.6. Размещение, основанное 

ствующих вершинам выделенного множества. на оценке связности 

2. Определяется порядок добавления ребер между Данное размещение отличается от кругового по-
вершинами выделенного множества. компонентного размещения объектов тем, что меж-

3. Для каждой вторичной вершины v  V \   выби- ду выделенными компонентами могут быть связи. 
рается полоса, в которой будет размещена пометка Общая схема работы данного алгоритма размеще-
вершины v. ния следующая: сначала задается порог на количе-

12 БИЗНЕС-ИНФОРМАТИКА №4(30)–2014 г.



АНАЛИЗ ДАННЫХ И ИНТЕЛЛЕКТУАЛЬНЫЕ СИСТЕМЫ

Рис. 4. Размещение «две линии темы»

ство связей между вершинами. Множество ребер E Пример работы алгоритма выделения сообществ и 

разбивается на два непересекающихся множества применения размещения с использованием этого 

E = E   E  в соответствии с заданным порогом. E  – алгоритма представлен на рис. 5. Пусть L(M) – ме-
1 2 1

множество ребер, удовлетворяющих заданному трика качества полученного разбиения М.

порогу, E  – остальные. Далее применяется алго-
2                  (1) 

ритм выделения компонент связности на графе 

G' = (V, E ). В результате получено разбиение С вер-
1 где M – разбиение сети на сообщества, m – количе-

шин V исходного графа на непересекающиеся мно- ство сообществ, H(Q) – энтропия переходов между 
 

жества: сообществами, H (P i ) – энтропия перемещения вну-
три сообщества i, q – вероятность перехода между 
сообществами на каждом шаге случайного блужда-

Если количество связей между парой вершин ния, p  – вероятность остаться в сообществе i. 
i

ниже заданного порога, то они попадают в различ- Метрика качества полученного разбиения может 
ные компоненты связности, иначе они попадают быть легко подсчитана для любого разбиения, об-
в одну компоненту связности. Затем узлы каждой новление и пересчет этой метрики будет являться 

компоненты C  располагаются по окружности на быстрой операцией.
i

основе структуры их связей по представленному C помощью алгоритма выделения сообществ все 
выше алгоритму кругового размещения. Центры вершины разбиваются на непересекающиеся мно-
окружностей размещаются на одной горизонталь- жества
ной прямой. На схеме также располагаются все свя-

зи графа, тем самым между вершинами различных 

компонент связности могут быть проведены связи. Каждое множество вершин представляет сообще-
ство. Затем узлы каждого сообщества располагают-

3.7. Размещение, основанное ся по окружности на основе структуры их связей. 

на выделении сообществ  Центры окружностей размещаются по окружности. 
На схемы так же располагаются все связи графа, 

Реализован алгоритм автоматического выделения тем самым между вершинами различных сообществ 
сообществ [3] c возможностью визуализации графа могут быть проведены связи. Пример представлен 
на основе полученного разбиения на сообщества. на рис. 5.

БИЗНЕС-ИНФОРМАТИКА №4(30)–2014 г. 13



АНАЛИЗ ДАННЫХ И ИНТЕЛЛЕКТУАЛЬНЫЕ СИСТЕМЫ

Рис. 5. Пример работы алгоритма выделения сообществ и размещения, основанного на этом алгоритме

3.8. Размещение водить различные операции над графами. В данном 

«павлиний хвост» модуле реализован алгоритм извлечения подграфов 

на основе поисков в ширину и на заданную в за-
Автоматическое размещение «павлиний хвост» 

просе глубину от заданной вершины, на основе ис-
базируется на методе физических аналогий. В ка-

пользуемых в запросах фильтров по атрибутам, на 
честве вершин выступают одинаково заряженные 

базе выделения кластеров. Предусмотрена возмож-
частицы, а в качестве связей – пружины. Оттал-

ность поиска объектов по заданным параметрам 
кивающая сила вершин основывается на законе 

в соответствии с заданными алгоритмами. Кроме 
Кулона (2), описывающего силы взаимодействия 

того, реализована функциональность поиска похо-
между точечными электрическими:

жих вершин на основе структуры связей и значений 

                             , (2) атрибутов. Для более эффективного анализа графов 

реализованы алгоритмы объединения и пересече-

ния графов. Также можно проанализировать крат-
где  – сила, с которой заряд 1 действует на заряд 

чайшие пути между любой парой вершин в графе.
2, q , q  – величины зарядов,  – радиус-вектор 

1 2
За счет связки с хранилищем графов удобно рабо-

(вектор, направленный от заряда 1 к заряду 2, и рав-
тать с огромными графами путем выгрузки подгра-

ный, по модулю, расстоянию между зарядами – r ), 
12

фов по заданным фильтрам, объединения и пересе-
k – коэффициент пропорциональности.

чения графов. Стоит отметить, что за счет наличия 
Сила притяжения между связанными вершинами 

модуля конвертации данных все графы хранятся в 
описывается законом Гука (3):

едином специализированном формате хранилища.

                                   F = k l, (3) Аналитические инструменты позволяют проводить 

разнообразные исследования графа [11] и его струк-
где F – сила, которой растягивают (сжимают) пру-

туры. Предусмотрен поиск и выделение вершин и 
жину, l – абсолютное удлинение (сжатие) пружи-

связей по заданным атрибутам. Реализован подсчет 
ны, k – коэффициент упругости.

метрик центральности для всех вершин и связей. На-
Алгоритм авторазмещения является итераци- пример, используется метрика связи – центральность 

онным. Следовательно, алгоритм закончит свою по посредничеству (4) (betweenness centrality): количе-
работу либо в случае, когда было достигнуто мак- ство кратчайших путей между всеми парами вершин, 
симальное количество итераций, либо когда дина- проходящих через заданную связь.
мическая система перешла в состояние равновесия.

                    (4) 

4. Средства анализа графа
где l – связь, для которой считается метрика, V – 

Модуль анализа графа предназначен для реализа- множество вершин графа,  – количество крат-

ции алгоритмов и структур данных и позволяет про- чайших путей между вершинами s и t,  – коли-

14 БИЗНЕС-ИНФОРМАТИКА №4(30)–2014 г.



АНАЛИЗ ДАННЫХ И ИНТЕЛЛЕКТУАЛЬНЫЕ СИСТЕМЫ

чество кратчайших путей между вершинами s и t, OpenGL. Интерфейс реализован с использованием 

проходящих через связь l. библиотеки Qt. Все используемые средства реали-

При работе с большими графами для анализа зации являются кроссплатформенными. Тем са-

структуры реализован алгоритм оценки связности, мым программный комплекс способен функцио-

который позволяет для заданного порога по числу нировать в различных операционных системах.

связей между парой вершин разбить граф на компо- Предлагаемый в данной статье программный ком-

ненты связности, выполнить размещение объектов плекс предоставляет широкую функциональность 

с учетом полученных компонент и показать списки при работе с графами больших размеров. В данном 

всех вершин для каждой полученной компоненты. программном обеспечении реализованы средства 

представления графов, позволяющие проводить ана-

Заключение лиз графа взаимодействующих объектов  визуальны-

ми средствами после алгоритмической обработки. 
Описанный программный комплекс реализован Данное средство предназначено для широкого круга 

на языке C++. Реализация визуализации выпол- аналитиков в областях информационной безопасно-

нена с использованием графической библиотеки сти, маркетинга, социологических исследований. 

Литература

1. Батура Т.В. Методы анализа компьютерных социальных сетей // Вестник НГУ, серия «Информацион-
ные технологии». 2012. Т. 10, вып. 4. С. 13-28.

2. Борисенко В.В., Лахно А.П., Чеповский А.М. Специальное представление графов и визуализация се-
мантических сетей // Фундаментальная и прикладная математика. 2010. Т. 16, вып. 8. С. 27-35. 

3. Коломейченко М.И., Чеповский А.А., Чеповский А.М. Алгоритм выделения сообществ в социальных 
сетях // Фундаментальная и прикладная математика. 2014. Т. 19, №1. С. 21-32.  

4. Поляков И.В., Чеповский А.А., Чеповский А.М. Хранение и обработка графа социальных сетей // 
Вестник Новосибирского государственного университета. Серия: Информационные технологии. 2013. 
Т. 11, № 4. С. 77-83.

5. Чураков А.Н. Анализ социальных сетей // СоцИс. 2001. №1. С. 109-121.
6. Battista G., Tamassia R., Tollis I. Graph drawing: Algorithms for the visualization of graphs. Springer, 1999. 
7. Baur M., Brandes U. Crossing reduction in circular layouts // Proceedings of the 30th International Conference 

on Graph-Theoretic Concepts in Computer Science (WG 2004).  Bonn, Germany, 21-23 June 2004. P. 332-343.
8. CrimeLink. URL: http://www.pciusa.us/Crimelink.aspx (дата обращения: 05.04.2014).
9. i2 Analyst's Notebook. URL: http://www-03.ibm.com/software/products/ru/analysts-notebook (дата обра-

щения: 05.04.2014).
10. Kaufmann M., Wagner D. Drawing Graphs. Springer, 2001. 
11. Newman M.E. Networks: An Introduction.  Oxford, UK: Oxford University Press, 2010.  
12. Sentinel Visualyzer. URL: http://www.fmsasg.com/Products/SentinelVisualizer (дата обращения: 05.04.2014).
13. Tom Sawyer. URL: http://www.tomsawyer.com (дата обращения: 05.04.2014).
14. XAnalys Link Explorer. URL: http://www.xanalys.com/solutions/linkexplorer.html (дата обращения: 

05.04.2014).

БИЗНЕС-ИНФОРМАТИКА №4(30)–2014 г. 15



DATA ANALYSIS AND INTELLECTUAL SYSTEMS 

HUGE GRAPH VISUALIZATION AND ANALYSIS

Maxim KOLOMEYCHENKO 
Graduate of MSc Program, National Research University Higher School of Economics 

Address: 20, Myasnitskaya street, Moscow, 101000, Russian Federation
E-mail: maxim.kolomeychenko@mail.ru   

Andrey CHEPOVSKIY 
Associate Professor, Department of Information Security Management, Faculty 
of Business Informatics, National Research University Higher School of Economics; 
Professor, Department of Applied Mathematics and Systems Modeling, Institute 
of Communications and Media Business, Moscow State University of Printing Arts

Address: 2a, Pryanishnikova street, Moscow, 127550, Russian Federation
E-mail: achepovskiy@hse.ru

The problem of huge graph visualization arises in various fields of sociology and marketing. The relevance of this work is 
determined by the need for the software package for analysis and visualization of such graphs. This paper introduces summary 
analysis of several software products and highlights their weaknesses: lack of cross-platform and specialized graph warehouses, 
inability to deal with huge graphs.

This paper presents a detailed description of the overall architecture of the software developed and each of its modules separately, 
as well as a procedure for communication between core modules. A special graph warehouse capable to process graphs having up to 
100 million vertices and billions of links is used to store graphs. A description of main data warehousing principles is also introduced. 
The use of a proprietary file system ensures the absence of additional system calls when working with the warehouse and the lack 
of a complex addressing system and any excessive mechanisms, that enables to avoid any extra overhead costs associated with 
data warehousing.  Furthermore, there is a description of a methodology for data visualization module, used data structures and 
computer graphics algorithms, that enable to handle graphs comprising up to millions of vertices on real time basis.

It is worth noting a wide range of algorithms for auto layout of graphs such as random layout, circular layout, circular component 
layout, peacock tail layout, one or two themes layout, layout based on community detection and estimation of cohesion. This 
paper presents a detailed description of each of the layout mentioned above.

Special attention should be paid to the developed methods of graph analysis. Algorithms have been designed to detect 
communities in social networks, to evaluate graph cohesion, to find the shortest paths between any pair of vertices, graphs union 
and intersection, etc.

A key feature of all algorithms presented in this paper is their ability to handle huge graphs.

Key words: graph, graph analysis, graph visualization, graph storage, software.

References
1. Batura T. (2012) Metody analiza kompjuternyh socialnyh setej [Methods of social networks analysis]. Vestnik NGU, serija «Informacionnye 

tehnologii» [Information Technologies], no. 10 (4), pp. 13-28. (in Russian) 
2. Borisenko V.V., Lahno A.P., Chepovskiy A.M. (2010) Specialnoe predstavlenie grafov i vizualizacija semanticheskih setej [Special 

graph representation and visualization of semantic networks]. Fundamentalnaya i prikladnaya matematika [Fundamental and Applied 
Mathematics], vol. 16, no. 8, pp. 27-35. (in Russian) 

3. Kolomejchenko M.I., Chepovskiy A.A., Chepovskiy A.M. (2014) Algoritm vydelenija soobshhestv v socialnyh setjah [The algorithm for 
detecting communities in social networks]. Fundamentalnaya i prikladnaya matematika [Fundamental and Applied Mathematics], vol. 19, 
no. 1, pp. 21-32. (in Russian)  

4. Poljakov I.V., Chepovskiy A.A., Chepovskiy A.M. (2013) Hranenie i obrabotka grafa socialnyh setej [Social networks storing and processing]. 
Vestnik NGU, serija «Informacionnye tehnologii» [Information Technologies], vol. 11, no. 4, pp. 77-83. (in Russian) 

5. Churakov A.N. (2001) Analiz sotsialnykh setey [Social network analysis]. SotsIs, no. 1, pp. 109-121. (in Russian) 
6. Battista G., Tamassia R., Tollis I. (1999) Graph drawing: Algorithms for the visualization of graphs. Springer. 
7. Baur M., Brandes U. (2004) Crossing reduction in circular layouts. Proceedings of the 30th International Conference on Graph-Theoretic 

Concepts in Computer Science (WG 2004), WG 2004,  Bonn, Germany, 21-23 June, 2004, pp. 332-343.
8. CrimeLink. Available at: http://www.pciusa.us/Crimelink.aspx (accessed: 05.04.2014).
9. i2 Analyst’s Notebook. Available at: http://www-03.ibm.com/software/products/ru/analysts-notebook (accessed: 05.04.2014).
10. Kaufmann M., Wagner D. (2001) Drawing Graphs. Springer. 
11. Newman M.E. (2010) Networks: An Introduction.  Oxford, UK: Oxford University Press.  
12. Sentinel Visualyzer. Available at: http://www.fmsasg.com/Products/SentinelVisualizer (accessed: 05.04.2014).
13. Tom Sawyer. Available at: http://www.tomsawyer.com (accessed: 05.04.2014).
14. XAnalys Link Explorer. Available at: http://www.xanalys.com/solutions/linkexplorer.html (accessed: 05.04.2014).

16 BUSINESS INFORMATICS №4(30)–2014