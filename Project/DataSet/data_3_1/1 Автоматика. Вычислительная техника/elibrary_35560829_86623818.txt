Программные продукты и системы / Software & Systems                3 (31) 2018 

УДК 004.4'2+82+75+771                  Дата подачи статьи: 10.10.17 
DOI: 10.15827/0236-235X.031.3.527-536               2018. Т. 31. № 3. С. 527–536 

Облачная платформа IACPaaS  
для разработки оболочек интеллектуальных сервисов:  

состояние и перспективы развития 
 
В.В. Грибова 1, д.т.н., старший научный сотрудник, зам. директора, gribova@iacp.dvo.ru 

А.С. Клещев 1, д.ф.-м.н., профессор, главный научный сотрудник, kleschev@iacp.dvo.ru 

Ф.М. Москаленко 1, к.т.н., старший научный сотрудник, philipmm@iacp.dvo.ru 

В.А. Тимченко 1, к.т.н., старший научный сотрудник, vadim@iacp.dvo.ru 

Л.А. Федорищев 1, к.т.н., научный сотрудник, fleo@iacp.dvo.ru 

Е.А. Шалфеева 1, к.т.н., доцент, старший научный сотрудник, shalf@iacp.dvo.ru 
 
1 Институт автоматики и процессов управления ДВО РАН, г. Владивосток, 690041, Россия 

 

 

В работе описаны основные характеристики и функциональные возможности платформы облачных вычислений 
IACPaaS, которая поддерживает три модели предоставления облачных сервисов – PaaS, SaaS и DaaS. Платформа пред-
назначена для разработки специализированных (то есть ориентированных на определенные предметные области и/или 
классы решаемых задач) оболочек интеллектуальных сервисов, а также прикладных интеллектуальных сервисов с ис-
пользованием таких оболочек, которые при этом предоставляются и как облачные сервисы платформы. Создание (со-
провождение) прикладных сервисов с помощью оболочки сводится к формированию (модификации) базы знаний с 
использованием предоставляемых этой оболочкой средств формирования баз знаний и связыванию ее с решателем 
задач. Решатель задач состоит из набора агентов – программных компонентов, взаимодействующих друг с другом 
посредством обмена сообщениями. 

В специализированных оболочках при представлении знаний используется специфичное для предметной области 
концептуальное представление, определяемое онтологией той области, для которой создается оболочка. Такая про-
блемно-ориентированная модель (язык) представления знаний используется средством формирования баз знаний для 
генерации ориентированного на экспертов предметной области пользовательского интерфейса. В результате эксперты 
могут формировать и сопровождать базы знаний и данных в привычной для себя системе понятий (без посредников в 
лице инженеров-когнитологов или дополнительного обучения), не совершая ошибок в использовании языка представ-
ления знаний. 

Платформа IACPaaS предоставляет базовую (универсальную) и множество специализированных технологий раз-
работки оболочек прикладных интеллектуальных сервисов с использованием инструментальных средств поддержки 
этих технологий. Также предоставляется технология взаимодействия агентов решателей задач с внешним (не входя-
щим в состав платформы IACPaaS) программным обеспечением. Она основана на стандартном механизме обработки 
http-запросов и возможности запуска исполняемых файлов внешнего программного обеспечения из программ (скрип-
тов), расположенных на web-сервере. 

Ключевые слова: оболочки экспертных систем, интеллектуальные системы, технология разработки интеллек-
туальных систем, облачная платформа, облачные вычисления, интеллектуальные сервисы, мультиагентные си-
стемы. 

 

Технологии облачных вычислений имеют сего- сервисов разных типов на основе масштабируемых 
дня широкое распространение. Рынок предоставля- облачных сред. Решению данной задачи посвящено 
емых облачных решений и услуг достаточно разно- достаточно большое количество проектов, и мно-
образен и предлагает как отдельные компоненты и гие облачные платформы имеют специализирован-
услуги, так и широкий спектр комплексных реше- ный инструментарий для поддержки разработки 
ний, реализующих несколько моделей, – IaaS, PaaS, приложений разных типов. Типичным примером 
SaaS, DaaS и др. Анализируя имеющиеся на рынке являются универсальные и специализированные 
облачные инфраструктуры, предлагающие сред- инструменты разработки web-сайтов. В то же 
ства разработки различных приложений – модель время большой класс задач, решение которых воз-
PaaS [1–3], можно констатировать, что все они можно лишь с помощью интеллектуальных си-
предназначены для решения широкого круга задач стем (ИС), в архитектуре которых присутствует 
и содержат системы управления БД (MySQL, Redis, специализированный компонент – база знаний, не 
MongoDB, PostgreSQL, Memcached, Oracle и др.), а покрывается этими проектами. Общепризнано, что 
также средства разработки приложений на объ- универсальные технологии либо полностью не 
ектно-ориентированных и скриптовых языках про- применимы для создания ИС, либо значительно 
граммирования (Java, PHP, Python, Ruby, JavaS- усложняют процесс их разработки и, прежде всего, 
cript, Node.js, Go, .NET и др.). сопровождения; вследствие этого жизнеспособ-

На сегодняшний день актуальной является за- ность таких систем оказывается низкой [4]. 
дача поиска методов развития уровня PaaS, позво- Для снижения трудоемкости разработки и со-
ляющих упростить создание сложных прикладных провождения ИС традиционно используются обо- 

 527 



Программные продукты и системы / Software & Systems                3 (31) 2018 

лочки, каждая из которых предлагает разработчику Модель представления знаний и данных. Си-
систему управления базами знаний, основанную на стемы управления базами знаний проблемно-не- 
некоторой модели представления знаний, и реша- зависимых оболочек основаны на проблемно-неза-
тель задач, реализующий алгоритм обработки зна- висимых моделях представления знаний и дан- 
ний и данных [4–7]. Создание (сопровождение) ИС ных – системах продукций (правил), фреймах,  
с помощью оболочки сводится к формированию объектно-ориентированных моделях [11, 12]. В си-
(модификации) базы знаний через систему управ- стемах продукций предметные и процедурные зна-
ления базами знаний и связыванию ее с решателем ния неразрывно связаны и имеют форму правил; в 
задач. Разработка оболочек является отдельной и системах фреймов процедурные знания присоеди-
сложной проблемой; в настоящее время неиз- няются к предметным, но имеют иное (процедур-
вестны облачные платформы, которые поддержи- ное) представление; в объектно-ориентированных 
вают их разработку. моделях представляются только предметные зна-

Целью данной работы является описание облач- ния и данные. Хотя практика показала, что системы 
ной платформы IACPaaS, предназначенной для управления базами знаний, основанные на про-
разработки оболочек интеллектуальных сервисов, блемно-независимых моделях представления зна-
ее основных принципов, архитектуры и функцио- ний и данных, позволяют формировать небольшие 
нальных возможностей. базы знаний в различных предметных областях, 

 формирование и особенно сопровождение боль-
Основные принципы, положенные  ших (компетентных) баз знаний – задача чрезмер-

в основу платформы IACPaaS ной интеллектуальной сложности. Причина в том, 
 что база знаний создается экспертами в соответ-
Платформа IACPaaS (далее – платформа) пред- ствующей предметной области, а не специали-

назначена для разработки оболочек интеллектуаль- стами в области инженерии знаний или программи-
ных сервисов по нескольким технологиям, состав рования. Эксперту для формирования базы знаний 
которых является расширяемым, создания с помо- и ее сопровождения необходимо, чтобы зна- 
щью этих оболочек прикладных интеллектуальных ния имели привычную для него форму и ему не 
сервисов, а также использования этих сервисов для приходилось бы преобразовывать знания в форму, 
решения задач.  навязываемую моделью представления знаний. 

Опишем общие принципы, положенные в ос- Система управления базами знаний проблемно-
нову платформы IACPaaS. ориентированной оболочки основана на некоторой 

Поддерживаемые типы оболочек. Большин- проблемно-ориентированной модели представле-
ство оболочек, реализованных к настоящему вре- ния знаний и данных. В такой модели представля-
мени, являются проблемно-независимыми. Их  ются только предметные знания и данные; она учи-
достоинство в универсальности – потенциальной тывает специфику организации знаний и данных в 
возможности использования для создания ИС, конкретной предметной области. Благодаря этим 
предназначенных для решения широкого круга  свойствам только системы управления базами зна-
задач в различных предметных областях. Стремле- ний, основанные на проблемно-ориентированных 
ние разрабатывать именно проблемно-независи- моделях представления знаний, снижают интел-
мые оболочки с возможно более широкой обла- лектуальную сложность формирования и сопро-
стью применения связано и с высокой трудоемко- вождения баз знаний до приемлемой. Вместе с тем 
стью их реализации. В то же время разработка и  класс таких моделей весьма широк; в качестве при-
сопровождение ИС с помощью проблемно-незави- меров можно указать модели представления меди-
симой оболочки, не учитывающей специфику кон- цинских знаний о диагностике и лечении [13],  
кретной предметной области и задачи, часто оказы- математических знаний и знаний о способах рас-
ваются трудоемкими и интеллектуально сложными. суждений при доказательстве теорем, знаний о 

Проблемно-ориентированные (или специализи- компьютерных программах и их преобразовани- 
рованные) оболочки, как правило, имеют более уз- ях [14], знаний в области неорганической и органи-
кую область применения, чем проблемно-незави- ческой химии [15], знаний о виртуальных мирах и 
симые. Однако создание и сопровождение ИС для сценах [16], знаний в области технической диагно-
задач и предметных областей, на которые ориенти- стики роботов [17]. 
рована такая оболочка, имеют меньшую трудоем- Платформа IACPaaS предлагает разработчикам 
кость и интеллектуальную сложность, что делает оболочек интеллектуальных сервисов универсаль-
такие ИС более жизнеспособными [8–10]. ный проблемно-независимый метаязык для спе- 

Платформа IACPaaS ориентирована на сниже- цификации абстрактного синтаксиса моделей (язы-
ние трудоемкости разработки оболочек, прежде ков) представления знаний [18]. Метаязык поз- 
всего проблемно-ориентированных, что, в конеч- воляет определить абстрактный синтаксис той  
ном счете, имеет целью повышение жизнеспособ- модели (языка) представления знаний, которая 
ности интеллектуальных сервисов, создаваемых с учитывает организацию знаний и данных конкрет- 
помощью таких оболочек. ной предметной области. 

528  



Программные продукты и системы / Software & Systems                3 (31) 2018 

Система управления базами знаний. Система Поддержка различных технологий создания 
IACPaaS основана на метаязыке для спецификации оболочек. Инструментарий для разработки прило-
абстрактного синтаксиса моделей представления жений на платформе IACPaaS можно разделить на 
знаний. С помощью специального структурного два основных типа – универсальный и ориентиро-
редактора, входящего в состав IACPaaS [19], инже- ванный на проблему либо задачу. Универсальный 
нер знаний может определить абстрактный синтак- инструментарий позволяет создавать решатели за-
сис необходимой модели представления знаний в дач любого типа, но процесс создания является бо-
форме грамматики, порождающей размеченные лее трудоемким по сравнению с использованием 
графы [20, 21], – семантические представления баз специализированного инструментария. Платформа 
знаний и данных. Сама грамматика также имеет поддерживает создание оболочек по нескольким 
форму графа с единственной выделенной началь- технологиям: базовой, поддерживаемой универ-
ной вершиной (аксиомой). По этой грамматике экс- сальными средствами разработки, и специализиро-
перт с помощью структурного редактора может ванным, поддерживаемым специализированными 
формировать и модифицировать базы знаний и средствами разработки. Набор технологий допус-
данных. Структурный редактор генерирует для кает расширение. 
него полимодальный интерфейс – база знаний и  
данных (и их разные фрагменты) может представ- Модель представления знаний и данных.  
ляться в виде размеченного квазидерева, графа, Система управления базами знаний 
текста, таблицы.  

Решатели задач. Разрабатываемые средствами Обязательным компонентом любой оболочки 
платформы IACPaaS решатели задач имеют фор- ИС является система управления базами знаний. 
мальные параметры, каждый из которых состоит  Если в универсальных оболочках базы знаний опи-
из имени формального параметра и грамматики, за- сываются на специализированных универсальных 
дающей абстрактный синтаксис модели представ- языках, поддерживающих известные модели пред-
ления знаний или данных, средствами которой ставления знаний, то в проблемно-ориентиро- 
представляются фактические параметры, соответ- ванных оболочках при представлении знаний ис-
ствующие этому формальному [22]. Создание ин- пользуется специфичное для предметной области 
теллектуального сервиса на основе оболочки со- концептуальное представление, определяемое он-
стоит в формировании с помощью системы управ- тологией той области, для которой создается обо-
ления базами знаний необходимых баз знаний и лочка. 
данных – фактических параметров, соответствую- Для спецификации абстрактного синтаксиса не-
щих формальным параметрам решателя, и сборке обходимой модели представления знаний исполь-
из них и решателя интеллектуального сервиса. Ре- зуется универсальный метаязык, входящий в со-
шатели задач разрабатываются на основе агентного став платформы. Сформированный с его помощью 
подхода, то есть решатель задач состоит из множе- абстрактный синтаксис модели  представления зна-
ства агентов, которые обмениваются сообщени- ний – это пара <GM, M>, где GM – граф понятий,  
ями. Такой подход обеспечивает гибкость при со- в терминах которого формируются базы знаний и 
здании решателей: решатель может «собираться» данных, возможно, содержащий циклы и петли,  
из агентов, разработанных ранее.  

а M – разметка этого графа. Граф GM – это тройка 
Использование внешних модулей для создания 

GM = <Vertices, Arcs, RootVertex>, где Vertices – 
ИС. Тенденции развития программного обеспече-

множество вершин графа, Arcs – множество дуг 
ния показывают, что во многих случаях (например, 

графа, RootVertex – корневая вершина графа 
для реализации динамических экспертных систем) 

(RootVertex  Vertices). Средства разметки M 
к ИС требуется подключение различных дополни-
тельных модулей, реализованных на сторонних включают в себя разметку вершин V и разметку 

платформах. Платформа IACPaaS обеспечивает дуг A. Эта разметка позволяет при описании  

двусторонний обмен данными между решателями абстрактного синтаксиса необходимой модели 

задач платформы IACPaaS и сторонними компо- представления знаний задать ограничения на 

нентами на других платформах. структуру и содержание знаний или данных кон-

Реализация совместной разработки ИС и их кретной предметной области. Подробно метаязык 

компонентов. Необходимость включения в про- описания моделей представления знаний рассмот-

цесс разработки оболочек и интеллектуальных сер- рен в [18]. 

висов специалистов разного профиля (инженеров Базы знаний и данных, сформированные по 

знаний, экспертов предметной области, проекти- описанной модели представления знаний, также 

ровщиков, программистов, дизайнеров интерфейса являются парой KB = <GI, I>, где GI – граф (сеть) 
и др.) требует организации их совместной работы. понятий, I – разметка этого графа. Граф GI – это 
Платформа обеспечивает возможность коллектив- тройка GI = <IVertices, IArcs, IRootVertex>, компо-
ной разработки оболочек и интеллектуальных сер- ненты которой представляют собой множество 
висов через личные кабинеты разработчиков и ме- вершин (IVertices), дуг (IArcs) и корневую вершину 
ханизмы управления процессом разработки. (IRootVertex  IVertices). Средства разметки I, в 

 529 



Программные продукты и системы / Software & Systems                3 (31) 2018 

отличие от M, включают в себя только разметку фейс по модели представления знаний. Для пред- 
вершин, то есть I  V. Каждая вершина графа ин- ставления базы знаний (данных) в удобной для 

формации отображается в пару V = <SM, RM>, где пользователей форме (модели представления) 

SM – служебная метка, RM – метка соответствия платформа имеет дополнительные средства генера-

между моделью представления знаний (данных) и ции мультимодальных интерфейсов в форме гра-

ее концептуальным представлением. Метка соот- фов, текстов и таблиц. 

ветствия RM – это имя понятия предметной обла-  
сти, которому соответствует либо имя понятия Решатели задач 
предметной области, заданное в концептуальной  
модели, либо некоторое имя, входящее в класс Решатели задач разрабатываются на основе 
предметных областей, также заданный в этой кон- агентного подхода: решатель задач состоит из мно-
цептуальной модели. жества обменивающихся сообщениями агентов. 

Соответствие между базами знаний (данных) Среди агентов решателя выделяются корневой 
и их концептуальными представлениями задается (начинает работать первым), интерфейсный кон-
следующим образом [23]. Каждой вершине в графе, троллер (обеспечивает сопряжение пользователь-
представляющем базу знаний (данных), соответ- ского интерфейса с решателем задач) и множество 
ствует некоторая единственная вершина в ее кон- обрабатывающих агентов. Разработка кода аген-
цептуальной модели, называемая вершиной-про- тов осуществляется на языке Java. Пользова- 
тотипом (и каждой вершине в графе, представ- тельский web-интерфейс может быть создан не-
ляющем концептуальную модель, соответствует сколькими способами: с использованием набора 
некоторое множество вершин в базе знаний (дан- интерфейсных элементов, поддерживаемых специ-
ных)). Количество вершин в базе знаний (данных) ализированным интерфейсным агентом «Вид», а 
определяется разметкой графа, представляющего также средствами JavaScript и Flash. Разработка ре-
его концептуальную модель. Проводя аналогию с шателей задач подробно описана в [22]. 
программированием, можно заметить, что в пред- Каждый решатель задач представляется корне-
лагаемой модели, с одной стороны, вся информа- вым орграфом, который порожден по хранящейся 
ция представляется в едином унифицированном в Фонде платформы метаинформации решателей 
формате – в форме корневых иерархических оргра- задач (см. http://www.swsys.ru/uploaded/image/ 
фов, в чем можно усмотреть прямое сходство с 2018-3/2018-3-dop/11.jpg), интерпретируемой как 
функциональным программированием, в котором абстрактный синтаксис языка спецификации реша-
все данные представлены также унифицированно – телей задач. 
списками, с другой стороны, в традиционном про- Агент декларативно представляется корневым 
граммировании общепринятой практикой является орграфом, который порожден по хранящейся в 
разделение информации (входной, промежуточной Фонде платформы метаинформации агентов (см. 
и выходной) на множество разрозненных информа- http://www.swsys.ru/uploaded/image/2018-3/2018-3-
ционных единиц, соответствующих типам данных dop/12.jpg), интерпретируемой как абстрактный 
(программа имеет множество переменных различ- синтаксис языка спецификации агентов. Некото-
ных типов). В связи с этим программист должен рые терминальные вершины сети, описывающей 
знать все неявные связи между переменными и вы- агента, представлены объектами сорта бинарные 
ражать их через алгоритмы обработки. Предлагае- данные, содержащими как исходный, так и испол-
мая модель основана на обратном принципе: коли- няемый код агента [24]. 
чество орграфов невелико, они имеют более слож- Каждый шаблон сообщений является метаин-
ную структуру, но эта структура явно определяет формацией, интерпретируемой как абстрактный 
связи между всеми информационными единицами. синтаксис языка сообщений агентов. Некоторые 

Внутреннее представление баз знаний, порож- терминальные вершины орграфа, описывающего 
даемых на основе концептуальной модели пред- шаблон сообщений, также могут быть представ-
ставления знаний, также имеет вид корневых лены объектами сорта бинарные данные, содер- 
иерархических орграфов (с возможными петлями и жащими методы создания и обработки сообще- 
циклами). Терминальные вершины этих орграфов ний [24]. 
представляют объекты разных сортов: строки, це- Представление всех данных платформы в 
лочисленные и вещественные константы и др. форме корневых иерархических орграфов обеспе-
Иерархичность орграфа означает, что его вершина чивает универсальность их обработки с помощью 
может быть либо простой (не имеющей внутренней единого программного интерфейса (API) для до-
структуры), либо некоторым другим орграфом ступа к единицам хранения всех типов, а также еди-
(или его подграфом). ного инструментального сервиса платформы – 

Для управления (формирования, модификации, структурного редактора (для их формирования и 
отладки) баз знаний и данных платформа содержит сопровождения). Хранимые на платформе данные 
специализированный редактор [19], который авто- могут быть экспортированы во внешние форматы, 
матически генерирует пользовательский интер- количество которых расширяемо. 

530  



Программные продукты и системы / Software & Systems                3 (31) 2018 

Использование внешних модулей  ния оболочек, что в общем случае значительно  
для создания ИС более трудоемко) в соответствии с работами, под-

 держиваемыми платформой, а также создавать но-
Платформа поддерживает создание оболочек и вые работы. Под работой понимается набор ин-

сервисов на гетерогенных вычислительных архи- струментальных сервисов, с помощью которых 
тектурах: одна часть компонентов сервиса может можно создавать или модифицировать компоненты 
быть создана непосредственно на платформе (определенного типа) разрабатываемой ИС или 
IACPaaS (с использованием оболочек), другая оболочки. Работа может быть простой или состав-
часть – на сторонних платформах. При создании ной. Составная работа включает несколько этапов 
решателя задач оболочки также возможно его об- (шагов). Примером простой работы является созда-
ращение к сторонним модулям на основе http-про- ние базы знаний на основе ее концептуальной мо-
токола. Для реализации механизма отправки http- дели (пустой базы знаний). Пример составной ра-
запросов из программных агентов платформы на боты – разработка агента, которая включает разра-
внешние адреса был разработан агент-посредник. ботку шаблонов сообщений (этап пропускается, 
Агенты платформы взаимодействуют не напрямую если все необходимые шаблоны сообщений содер-
с внешними модулями, а с агентом-посредником жатся в Фонде платформы) и декларативной части 
(посредством стандартного обмена сообщениями).  агента, генерацию заготовки кода агента на языке 

 Java, его загрузку на платформу и интеграцию в де-
Реализация совместной разработки ИС  кларативную спецификацию агента. 

и их компонентов Компоненты ИС и оболочки создаются в соот-
 ветствии с технологиями, доступными на плат-
Каждому зарегистрированному пользователю форме. Технология описывает работы по созданию 

платформы предоставляется виртуальное рабочее оболочек (либо ИС) и частичный порядок выпол-
место – личный кабинет. Личные кабинеты пред- нения этих работ. Технологии, поддерживаемые 
ставляют собой набор инструментов управления платформой, разделены на два класса: базовая тех-
личными данными и сервисами пользователя. нология и множество специализированных техно-

Пользователи платформы разделяются на сле- логий. 
дующие типы: гость, зарегистрированный пользо- Базовая технология позволяет создать ИС и 
ватель и служебный пользователь. Гостю доступна оболочку для любого класса решаемых задач, при 
ограниченная функциональность, он может про- этом архитектура решателя допускает разные спо-
смотреть содержимое Фонда платформы; зареги- собы разбиения на агенты и их компоновки. По-
стрировавшись на платформе, он становится заре- дробное описание технологии дано в [22, 24].  
гистрированным пользователем, ему предоставля- В настоящее время с использованием базовой тех-
ются личный кабинет и набор функциональных нологии разработан ряд ИС и оболочек, а также ин-
возможностей: запуск сервисов, создание оболочек струментальных сервисов платформы, например, 
сервисов по предлагаемым технологиям, создание редактор графических сцен, интерпретатор вирту-
сервисов с использованием оболочек, создание но- альных сред, оболочка для медицинской диагно-
вых работ и технологий. стики, сервис по диагностике острых конъюнкти-

Зарегистрированные пользователи могут иметь витов и др. 
дополнительные служебные роли: управляющий Специализированные технологии ориентиро-
единицей хранения, администратор раздела, руко- ваны либо на конкретный класс задач, либо на 
водитель групповой разработки компонентов обо- определенную архитектуру решателя задач. В лю-
лочки либо сервиса на ее основе. Руководитель бом случае архитектура решателя задач такой обо-
группы определяет и приглашает участников со- лочки или сервиса имеет заданный технологией  
зданной группы, распределяет роли, назначает состав компонентов. Количество специализиро- 
сроки исполнения, а также формирует (передает) ванных технологий может расширяться пользова- 
необходимые для выполнения работы ресурсы. По- телями платформы. Каждая технология поддер- 
мимо перечисленных служебных ролей зареги- живается набором инструментальных сервисов и 
стрированных пользователей, у платформы есть информационных ресурсов, необходимых для со-
администратор, который отвечает за набор разде- здания оболочки или сервиса. В настоящее время 
лов Фонда платформы в целом, назначает админи- платформа поддерживает создание ИС и оболочек 
страторов разделов, удаляет пользователей, если по двум специализированным технологиям: техно-
они нарушают политику платформы. логии разработки ИС и оболочек с интерактив-

 ными виртуальными средами и технологии разра-
Поддержка различных технологий  ботки ИС и оболочек с агентами, присоединен-

создания оболочек ными к метаинформации. 
 Специализированная технология разработки 
Пользователи могут разрабатывать оболочки ИС и оболочек с интерактивными виртуальными 

ИС (возможно создание ИС с нуля, без использова- средами предназначена для создания облачных 

 531 



Программные продукты и системы / Software & Systems                3 (31) 2018 

сервисов с 3D-сценами. В соответствии с данной полняющие другие требуемые для работы сервиса 
технологией оболочка содержит онтологию вирту- преобразования. С помощью данной технологии 
альной сцены, по которой описывается 3D-сцена, разработана оболочка для исследований в области 
причем описание сцены разделено на два этапа – верификации интуитивных математических дока-
логическое и презентационное. Логическое опи- зательств. 
сание формирует эксперт предметной области с   
помощью редактора информации, презентацион- Архитектура платформы 
ное – дизайнер с помощью графического редак-  
тора, разработанного для поддержки данной техно- Платформа IACPaaS поддерживает три модели 
логии. Сформированное описание 3D-сцены пода- предоставления сервисов – PaaS, SaaS и DaaS. На 
ется на вход интерпретатору виртуального мира рисунке 1 справа представлена модель предостав-
(решателю задач, разработанному для поддержки ляемых сервисов платформы IACPaaS, слева – 
данной технологии), который затем автоматически стандартные модели предоставления сервисов 
генерирует 3D-сцену и 

IACPaaS:
обеспечивает управле-

Intelligent 
ние ею в процессе ра- DaaS: Applications, Control 
боты пользователя с об- Desktop as a and Platform as a 

лачным сервисом. Более Service Service

подробное описание тех- Виртуальные Виртуальные рабочие 

нологии и реализован- рабочие места места

ных сервисов дано в ра- Приложения
боте [16]. 

Специализированная Прикладные сервисы

технология разработки 
PaaS: SaaS: Средства разработки 

сервисов и оболочек с сервисов по различным 
Platform as a Software as a 

агентами, присоединен- технологиям

Service Service
ными к метаинформа- Средства создания 

ции, удобна для исполь- Приложения Приложения новых технологий

зования в двух случаях: 
если результатом ра- Данные

боты сервиса является Метаинформация

некоторый выходной Базы знаний

информационный ре-
Базы данных

сурс, формирование ко-
торого по его концепту- Решатели задач

альной модели осу- Агенты

ществляется методом 
Шаблоны сообщений

«сверху-вниз»; если раз- Данные Данные

работчик может декла-
ративно (в виде инфор- Среда Среда 

Виртуальная машина 
исполнения исполнения

платформы IACPaaS
мационного ресурса) (Runtime) (Runtime)

описать решатель задач. Связующее и 
Связующее ПО Связующее ПО

В этом случае решатель системное (серверное) 
(Middleware) (Middleware)

ПО
задач – это специальный 
инструментальный сер- Операционная Операционная Операционная система 

система система (Linux)
вис «расширяемый ре-
дактор информации», Слой Слой 

управляемый метаин- виртуализации виртуализации

формацией либо выход- Серверы Серверы Серверы 

ного информационного (вычислительные (вычислительные (вычислительные 
ресурсы) ресурсы) ресурсы)

ресурса, либо управляю-
щей структуры, к неко- Ресурсы для Ресурсы для Ресурсы для хранения 

хранения данных хранения данных данных
торым вершинам кото-
рой присоединены Сетевая Сетевая Сетевая 

агенты, порождающие инфраструктура инфраструктура инфраструктура

фрагменты выходного  
 

информационного ре- Рис. 1. Различные модели предоставления сервисов 
сурса (результата ра-  

Fig. 1. Different models of service delivery 
боты сервиса) или вы- 

532  

Управляет пользователь

Управляет провайдер Управляет пользователь Управляет пользователь

Управляет провайдер

Управляется пользователями платформы IACPaaS

Управляется разработчиками и обслуживающим 
персоналом платформы IACPaaS

...



Программные продукты и системы / Software & Systems                3 (31) 2018 

PaaS, SaaS и DaaS в облачных платформах. Рису- ции (содержательно это хранимые базы данных и 
нок позволяет сравнить набор компонентов плат- знаний, их концептуальные модели (метаинформа-
формы IACPaaS и наборы компонентов в других ция), решатели задач, агенты, шаблоны сообщений, 
облачных платформах в соответствии с реализо- модель абстрактного пользовательского интер-
ванными в их рамках моделями предоставления фейса и т.п.). 
сервисов. 3. Сервисный уровень. Данный уровень явля-

Архитектуру платформы можно разделить на ется совокупностью сервисов и оболочек интеллек-
четыре логических уровня: системный уровень, туальных сервисов. Выделяются прикладные сер-
уровень управления, сервисный уровень и библио- висы, создаваемые разработчиками для решения 
течный уровень (рис. 2). прикладных задач, а также оболочки и специализи-

1. Системный уровень (уровень Виртуальной рованные инструментальные сервисы, обеспечива-
машины). Виртуальная машина платформы ющие поддержку соответствующих технологий 
IACPaaS состоит из процессора информационных разработки сервисов и оболочек, работ и необходи-
ресурсов, процессора решателей задач и процес- мые для развития Фонда платформы. 
сора пользовательского интерфейса. Каждый из пе- 4. Уровень управления. Данный уровень пред-
речисленных процессоров предназначен для под- ставлен базовым инструментальным сервисом  
держки соответствующих архитектурных компо- Система управления, который предназначен для 
нентов облачных сервисов.  обеспечения контролируемого доступа к функцио-

2. Библиотечный уровень (уровень Фонда нальным возможностям платформы IACPaaS и 
платформы и Фонда пользователя). Фонд плат- управления правами доступа на использование 
формы и Фонд пользователя – это множество еди- прикладных и инструментальных сервисов, разра- 
ниц хранения различных видов и уровней абстрак- ботанных на базе платформы. 

Уровень управления Системный уровень
Система управления Процессор 

пользовательского 
интерфейса

Оболочки Прикладные сервисы
Базовая технология 

Оболочка для медицинской Сервис по диагностике острых 
разработки сервисов

диагностики конъюктивитов

Специализированные Сервис для верификации 

 технологии разработки Оболочка для исследований доказательств в арифметике

сервисов в области верификации 
интуитивных математических Сервис для верификации 

Технология разработки доказательств доказательств утверждений 

сервисов с агентами, теории пределов

присоединенными Сервис для верификации 

к метаинформации Оболочка для моделирования доказательств утверждений 
транспортных потоков о пределе как функции

в развивающейся городской 
Технология разработки Сервис для интерактивного 

инфраструктуре
сервисов с интерактивными моделирования транспортных 

виртуальными средами потоков г. Владивостока
Процессор 

решателей задач

Библиотечный уровень

Фонд Фонд
платформы пользователя

Метаинформация Метаинформация

Информация Информация

Шаблоны сообщений Шаблоны сообщений

Агенты Агенты

Процессор 
Интегрированные решатели задач Интегрированные решатели задач информационных 

ресурсов

 
 

Рис. 2. Концептуальная четырехуровневая архитектура платформы IACPaaS 
 

Fig. 2. A conceptual four-level architecture of the IACPaaS platform 

 533 

...
...

...

...

...



Программные продукты и системы / Software & Systems                3 (31) 2018 

Заключение В настоящее время ведутся работы по расшире- 
 нию функциональных возможностей платформы, 

В работе описаны основные характеристики и прежде всего по повышению уровня инструмен-

функциональные возможности облачной плат- тальной поддержки различных технологий. Важ-

формы IACPaaS, которые отличают ее от других ными задачами являются усовершенствование ме-

платформ.  тодов и средств обеспечения безопасности плат-

Платформа поддерживает создание специали- формы и защиты ее от некорректных действий 

зированных оболочек интеллектуальных систем. пользователей, создание усовершенствованных ме-

Их основная особенность и отличие от проблемно- тодов единого программного интерфейса для до-

независимых оболочек – ориентация на класс за- ступа к единицам хранения Фонда и операций над 

дач. С одной стороны, такие оболочки имеют более информационными ресурсами. 

узкую по сравнению с проблемно-независимыми Платформа поддерживает три модели облач-

оболочками область применения, а с другой, они ных вычислений: PaaS, SaaS, DaaS.  

учитывают специфику предметной области и за-  
дачи. В связи с этим формирование баз знаний с  Работа выполнена при частичной финансовой 
использованием таких оболочек значительно упро- поддержке РФФИ (проекты №№ 16-07-00340 и  
щается, в процесс разработки могут быть вклю- 17-07-00299) и ПФИ ДВО РАН «Дальний Восток» 
чены эксперты предметной области, что соответ- (проект № 18-5-078). 
ствует современным требованиям к созданию ин-  

теллектуальных систем. Простота и понятность Литература 
 

формирования баз знаний в таких типах оболочек, 1. Sun Le, Dong H., Khadeer Hussain F., Khadeer Hussain O., 
как отмечается в [8–10], значительно упрощают Chang E. Cloud service selection: State-of-the-art and future re-

процесс разработки интеллектуальных систем и search directions. J. of Network and Computer Applications, 2014, 

повышают их качество. vol. 45, pp. 134–150. 
2. CloudServiceMarket. A comprehensive overview of Cloud 

Платформа поддерживает создание оболочек Computing services. URL: http://www.cloudservicemarket.info/ 
ИС и сервисов по нескольким технологиям: базовой default.aspx (дата обращения: 06.10.2017). 
и специализированным. В настоящее время реали- 3. Zhang Qi, Cheng Lu, Boutaba R. Cloud computing: state-

зована поддержка двух специализированных тех- of-the-art and research challenges. J. of Internet Services and Appli-
cations, 2010, no. 1, pр. 7–18. DOI 10.1007/s13174-010-0007-6. 

нологий: технологии разработки сервисов с ин- 4. Рыбина Г.В. Интеллектуальные системы: от А до Я. Се-
терактивными виртуальными средами и техноло- рия монографий. В 3-х книгах. Книга 3. Проблемно-специали-

гии создания сервисов с агентами, присоединен- зированные интеллектуальные системы. Инструментальные 

ными к метаинформации. Каждая такая техноло- средства построения интеллектуальных систем. М.: Научтех- 
литиздат, 2015. 180 с. 

гия имеет свой набор инструментальных сервисов, 5. Kumar S., Prasad R. Importance of expert system shell in 
упрощающих (по сравнению с базовой техноло- development of expert system. Intern. J. of Innovative Research & 

гией) создание разрабатываемой оболочки или сер- Development, 2015, vol. 4, iss. 3, pp. 128–133. 

виса. 6. Rajendra M. Sonar An enterprise intelligent system devel-
opment and solution framework. Intern. J. of Applied Science, Engi-

Платформа поддерживает создание новых neering and Technology, 2007, vol. 4, no. 1, pp. 34–39. 
специализированных технологий и работ, разра- 7. Schalkoff R.J. Intelligent systems: principles, paradigms 
ботку необходимых для их поддержки инструмен- and pragmatics. Sudbury, Mass. Jones and Bartlett Publ., 2011,  

тальных сервисов с использованием уже существу- 758 p. 
8. Артемьева И.Л. Специализированные оболочки интел-

ющих технологий платформы.  лектуальных систем для сложно-структурированных предмет-
Особенностью платформы является поддержка ных областей // 11-я Национ. конф. по искусств. интеллекту с 

запуска и выполнения сервисов не только непосред- междунар. участ. М.: ЛЕНАНД, 2008. Т. 1. С. 95–103. 

ственно на платформе, но и на сторонних вычисли- 9. Загорулько Ю.А., Боровикова О.И. Программная обо-
лочка для построения многоязычных тезаурусов предметных 

тельных платформах, взаимодействие с приложе- областей, ориентированная на экспертов // КИИ-2012: тр. 13-й 
ниями которых возможно по протоколу http. Это Национ. конф. по искусств. интеллекту с междунар. участ. Бел-

обеспечивает гибкое создание оболочек и сервисов город: Изд-во БГТУ, 2012. Т. 4. С. 76–83. 

без ограничений на вычислительные мощности, ис- 10. Загорулько Ю.А. Семантическая технология разра-
ботки интеллектуальных систем, ориентированная на экспертов 

пользуемые библиотеки, операционные системы и предметной области // Онтология проектирования. 2015. № 1.  
другие требования. С. 30–46. 

Решатели задач разрабатываются на основе 11. Musen M. The protégé project: a look back and a look  

агентного подхода, в соответствии с которым лю- forward. Newsletter AI Matters, 2015, vol. 1, iss. 4, pp. 4–12.  
DOI: 10.1145/2757001.2757003. 

бой решатель – это множество агентов, обрабаты- 12. Осипов Г.С. Методы искусственного интеллекта. М.: 
вающих информационные ресурсы и обмениваю- Физмалит, 2015. 296 с.  

щихся между собой сообщениями. 13. Черняховская М.Ю. Формирование баз наблюдений на 

Зарегистрированные пользователи платформы основе онтологии медицины // Информатика и системы управ-
ления. 2009. № 4. С. 198–200. 

имеют личные кабинеты – виртуальные рабочие 14. Князева М.А., Купневич О.А. Модель онтологии пред-
места, которые предоставляют им набор инстру- метной области «Оптимизация последовательных программ». 

ментов для управления данными и сервисами. Определение расширения языка модели структурных программ 

534  



Программные продукты и системы / Software & Systems                3 (31) 2018 

терминами потокового анализа // НТИ: Сер. 2. 2005. № 4.  20. Rozenberg G. (Ed.) Handbook of graph grammars and com-
С. 14–22. puting by graph transformation, vol. 1: Foundations. World Scien-

15. Артемьева И.Л., Рештаненко Н.В. Интеллектуальная tific Publ. Co. Pte. Ltd., 1997, 572 p. 
система, основанная на многоуровневой онтологии химии // 21. Ehrig H., Engels G., Kreowski H.-J., Rozenberg G. (Eds.). 
Программные продукты и системы. 2008. № 1. С. 84–87. Handbook of Graph Grammars and Computing by Graph Transfor-

16. Грибова В.В., Федорищев Л.А. Визуализация виртуаль- mation, vol. 2: Applications, Languages and Tools. World Scientific, 
ных сред в облачных сервисах // Научная визуализация. 2016.  1999, 720 p. 
Т. 8. № 1. С. 133–145. 22. Грибова В.В., Клещев А.С., Крылов Д.А., Москален- 

17. Inzartsev A., Pavin A., Kleschev A., Gribova V., and ко Ф.М., Тимченко В.А., Шалфеева Е.А. Базовая технология 
Eliseenko G. Application of artificial intelligence techniques for разработки интеллектуальных сервисов на облачной платформе 
fault diagnostics of autonomous underwater vehicles. Proc. IACPaaS. Ч. 1: Разработка базы знаний и решателя задач // Про-
OCEANS 2016 MTS/IEEE Conference &Exhibition, USA, Monte- граммная инженерия. 2015. № 12. С. 3–11. 
rey, 2016. DOI: 10.1109/OCEANS.2016.7761098. 23. Gribova V.V., Kleshchev A.S., Moskalenko F.M., Tim-

18. Gribova V.V., Kleshchev A.S., Moskalenko F.M., Tim- chenko V.A. A Model for generation of directed graphs of infor-
chenko V.A. A two-level model of information units with complex mation by the directed graph of metainformation for a two-level 
structure that correspond to the questioning metaphor. Automatic model of information units with a complex structure. Automatic 
Documentation and Mathematical Linguistics, 2015, vol. 49, no. 5, Documentation and Mathematical Linguistics, 2015, vol. 49, no. 6, 
pp. 172–181. pp. 221–231. 

19. Gribova V.V., Kleshchev A.S., Moskalenko F.M., Tim- 24. Грибова В.В., Клещев А.С., Крылов Д.А., Москален- 
chenko V.A. Implementation of a model of a metainformation-con- ко Ф.М., Тимченко В.А., Шалфеева Е.А. Базовая технология 
trolled editor of information units with a complex structure. Auto- разработки интеллектуальных сервисов на облачной платформе 
matic Documentation and Mathematical Linguistics, 2016, vol. 50, lACPaaS. Ч. 2: Разработка агентов и шаблонов сообщений // 
no. 1, pp. 14–25. Программная инженерия. 2016. Т. 7. № 1. С. 14–20. 

 
 
 
 
 
 
 
 
 

Software & Systems                      Received 10.10.17 
DOI: 10.15827/0236-235X.031.3.527-536                2018, vol. 31, no. 3, pp. 527–536 

 
IACPaaS cloud platform for the development of intelligent service shells: current state  

and future evolution 
 

V.V. Gribova 1, Dr.Sc. (Engineering), Senior Researcher, Deputy Director, gribova@iacp.dvo.ru 
A.S. Kleschev 1, Dr.Sc. (Physics and Mathematics), Professor, Chief Researcher, kleschev@iacp.dvo.ru 
F.M. Moskalenko 1, Ph.D. (Engineering), Senior Researcher, philipmm@iacp.dvo.ru 
V.A. Timchenko 1, Ph.D. (Engineering), Senior Researcher, vadim@iacp.dvo.ru 
L.A. Fedorischev 1, Ph.D. (Engineering), Research Associate, fleo@iacp.dvo.ru 
E.A. Shalfeeva 1, Ph.D. (Engineering), Associate Professor, Senior Researcher, shalf@iacp.dvo.ru 

 
1 Institute of Automation and Control Processes Far Eastern Branch of RAS, Vladivostok, 690041, Russian Federation 

 
 
 

Abstract. The paper describes the main features and functional capabilities of the IACPaaS cloud platform. It provides 
three models of cloud service delivery: PaaS, SaaS and DaaS. The platform is intended for development of specialized (i.e., 
oriented to specific domains and/or classes of solved problems) intelligent service shells, as well as for development of applied 
intelligent services using such shells. Intelligent service shells are also presented as cloud services of the platform. Development 
(maintenance) of applied services using a shell is reduced to formation (modification) of a knowledge base using the tools 
provided by this shell and binding it with a problem solver. The problem solver consists of a set of agents that are software 
components interacting with each other by exchanging messages. 

Specialized intelligent service shells use a domain-specific conceptual representation, which is defined by the ontology of 
the domain for which the shell is created, for knowledge representation. The knowledge base formation tool uses such problem-
oriented model (language) for knowledge representation to generate user interface oriented on domain experts. As a result, 
domain experts can form and maintain knowledge bases and databases within a familiar conceptual framework (without cog-
nitive engineers as intermediaries or additional training) and make no mistakes in using the language for knowledge represen-
tation. 

The IACPaaS platform provides a basic (universal) and a several specialized technologies for development of the applied 
intelligent service shells using tools that support these technologies. In addition, there is a technology of interaction between 
problem solver agents and external software (not included in the IACPaaS platform). It is based on the standard mechanism of 
HTTP request processing and the ability to run external software executable files from programs (scripts) located on a web 
server. 

 535 



Программные продукты и системы / Software & Systems                3 (31) 2018 

Keywords: expert system shells, intelligent systems, intelligent system development technology, cloud platform, cloud 
computing, intelligent services, multi-agent services. 

 
Acknowledgements. The work has been partially financially supported by the RFBR (projects no. 16-07-00340,  

17-07-00299) and PFR FEB RAS “Far East” (project no. 18-5-078). 
 

References 
 

1. Sun Le, Dong H., Khadeer Hussain F., Khadeer Hussain O., Chang E. Cloud service selection: State-of-the-art and 
future research directions. J. of Network and Computer Applications. 2014, vol. 45, pp. 134–150. 

2. CloudServiceMarket. A Comprehensive Overview of Cloud Computing Services. Available at: http://www.cloudser-
vicemarket.info/default.aspx (accessed October 6, 2017). 

3. Zhang Qi, Cheng Lu, Boutaba R. Cloud computing: state-of-the-art and research challenges. J. of Internet Services and 
Applications. 2010, no. 1, pр. 7–18. DOI 10.1007/s13174-010-0007-6. 

4. Rybina G.V. Intelligent systems: from A to Z. Book 3. Problem-Specific Intelligent Systems. Instrumental Tools for 
Building Intelligent Systems. Moscow, Nauchtekhlitizdat Publ., 2015, 180 p. 

5. Kumar S., Prasad R. Importance of expert system shell in development of expert system. Intern. J. of Innovative Re-
search & Development. 2015, vol. 4, iss. 3, pp. 128–133. 

6. Rajendra M. Sonar an enterprise intelligent system development and solution framework. Intern. J. of Applied Science, 
Engineering and Technology. 2007, vol. 4, no. 1, pp. 34–39. 

7. Schalkoff R.J. Intelligent Systems: Principles, Paradigms and Pragmatics. Sudbury, Mass. Jones and Bartlett Publ., 
2011, 758 p. 

8. Artemeva I.L. Specialized shells of intelligent systems for complex structured domains. Proc. 11th National Conf. on 
Artificial Intelligence with Intern. Participation. Moscow, LENAND Publ., 2008, vol. 1, pp. 95–103 (in Russ.). 

9. Zagorulko Yu.A., Borovikova O.I. The software shell for building multilingual domain thesauri, focused on experts. 
Proc. 13th National Conf. on Artificial Intelligence with Intern. Participation (KII-2012). Belgorod, BGTU Publ., 2012,  
vol. 4, pp. 76–83 (in Russ.). 

10. Zagorulko Yu.A. A semantic technology for the development of intelligent systems, focused on domain experts. On-
tology of Designing. 2015, no. 1, pp. 30–46 (in Russ.). 

11. Musen M. The protégé project: a look back and a look forward. Newsletter AI Matters. 2015, vol. 1, iss. 4, pp. 4–12. 
DOI: 10.1145/2757001.2757003. 

12. Osipov G.S. Artificial Intelligence Methods. Moscow, Fizmalit Publ., 2015, 296 p. 
13. Chernyakhovskaya M.Yu. Formation of observation databases based on the medicine ontology. Informatics and Man-

agement Systems. 2009, no. 4, pp. 198–200 (in Russ.). 
14. Knyazeva M.A., Kupnevich O.A. An ontology model for “optimizing sequential programs”. The definition of exten-

sions for structural programs model language by terms of data flow analysis. Scientific and Technical Information. Ser. 2. 
Information Processes and Systems. 2005, no. 4, pp. 14–22 (in Russ.). 

15. Artemeva I.L., Reshtanenko N.V. An intelligent system based on multilevel chemistry ontology. Software & Systems. 
2008, no. 1, pp. 84–87 (in Russ.). 

16. Gribova V.V., Fedorishchev L.A. Visualization of virtual environments in cloud services. Scientific Visualisation. 
2016, vol. 8, no. 1, pp. 133–145 (in Russ.). 

17. Inzartsev A., Pavin A., Kleschev A., Gribova V., Eliseenko G. Application of artificial intelligence techniques for fault 
diagnostics of autonomous underwater vehicles. Proc. OCEANS 2016 MTS/IEEE Conf. & Exhibition. Monterey, California, 
USA, 2016. 

18. Gribova V.V., Kleshchev A.S., Moskalenko F.M., Timchenko V.A. A two-level model of information units with com-
plex structure that correspond to the questioning metaphor. Automatic Documentation and Mathematical Linguistics. 2015, 
vol. 49, no. 5, pp. 172–181. 

19. Gribova V.V., Kleshchev A.S., Moskalenko F.M., Timchenko V.A. Implementation of a model of a metainformation-
controlled editor of information units with a complex structure. Automatic Documentation and Mathematical Linguistics. 2016, 
vol. 50, no. 1, pp. 14–25. 

20. Handbook of Graph Grammars and Computing by Graph Transformation. Vol. 1: Foundations. G. Rozenberg (Ed.). 
World Sci. Publ. Co. Pte. Ltd., 1997, 572 p. 

21. Handbook of Graph Grammars and Computing by Graph Transformation. Vol. 2: Applications, Languages and Tools. 
H. Ehrig, G. Engels, H.-J. Kreowski, G. Rozenberg (Eds.). World Scientific, 1999, 720 p. 

22. Gribova V.V., Kleshchev A.S., Krylov D.A., Moskalenko F.M., Timchenko V.A., Shalfeeva E.A. A basic technology 
for developing intelligent services using IACPaaS cloud platform. Part 1. Development of a knowledge base and problem 
solver. Software Engineering. 2015, no. 12, pp. 3–11 (in Russ.). 

23. Gribova V.V., Kleshchev A.S., Moskalenko F.M., Timchenko V.A. A Model for generation of directed graphs of in-
formation by the directed graph of metainformation for a two-level model of information units with a complex structure. Au-
tomatic Documentation and Mathematical Linguistics. 2015, vol. 49, no. 6, pp. 221–231. 

24. Gribova V.V., Kleshchev A.S., Krylov D.A., Moskalenko F.M., Timchenko V.A., Shalfeeva E.A. A base technology 
for development of intelligent services with the use of IACPaaS cloud platform. Part 2. A development of agents and message 
templates. Software Engineering. 2016, vol. 7, no. 1, pp. 14–20 (in Russ.). 

536